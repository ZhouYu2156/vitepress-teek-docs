window.__VP_HASH_MAP__=JSON.parse("{\"@pages_archives.md\":\"DwY4pd8b\",\"@pages_categories.md\":\"DrhVW9O5\",\"@pages_tags.md\":\"BILgo7T1\",\"index.md\":\"DgOVJHcm\",\"public_snippets_preface.md\":\"DuJIMEqN\",\"web开发_前端_vue_index.md\":\"DnyE9o15\",\"web开发_后端_cpp_index.md\":\"uOpu14bW\",\"web开发_后端_lua_index.md\":\"Cze3rEEI\",\"web开发_后端_nodejs_index.md\":\"BTp48mxZ\",\"web开发_后端_nodejs_模块化规范演进.md\":\"CBYNexse\",\"web开发_后端_python_index.md\":\"Bx67zJCo\",\"web开发_后端_python_支付宝沙箱支付教程.md\":\"B35QDFmN\",\"web开发_后端_python_爬取酷狗付费音乐.md\":\"CjrGwRsf\",\"web开发_后端_桌面应用开发_index.md\":\"ucOUqS2m\",\"web开发_开发者工具_vscode_从零配置linux与windows互通的开发环境.md\":\"C8HwqMb-\",\"web开发_运维_linux_index.md\":\"oYtwS00p\"}");window.__VP_SITE_DATA__=JSON.parse("{\"lang\":\"zh-CN\",\"dir\":\"ltr\",\"title\":\"极客兔\",\"description\":\"vitepress-theme-teek 使用文档,vitepress 主题框架\",\"base\":\"/vitepress-teek-docs/\",\"head\":[],\"router\":{\"prefetchLinks\":true},\"appearance\":true,\"themeConfig\":{\"author\":{\"name\":\"程序员皮蛋鸽鸽\",\"link\":\"https://github.com/ZhouYu2156\"},\"footerInfo\":{\"topMessage\":[\"初闻不知曲中意，再听已是曲中人\"],\"bottomMessage\":[\"<span style=\\\"margin: 0; display: inline;\\\">本人已在地球上苟活了 <span id=\\\"footer-runtime\\\"></span></span>\",\"<script id=\\\"LA-DATA-WIDGET\\\" crossorigin=\\\"anonymous\\\" charset=\\\"UTF-8\\\" src=\\\"https://v6-widget.51.la/v6/3LmZHLhDZIDpMaT0/quote.js?theme=#1690FF,#333333,#999999,#007BFF,#FFFFFF,#1690FF,12&f=12&display=0,0,1,1,1,1,1,1\\\"></script>\",\"<a href=\\\"https://51.la/\\\" target=\\\"_blank\\\" style=\\\"display:flex;align-items:center;justify-content:center;\\\">本网站由51.LA <img src=\\\"https://51.la/favicon.ico\\\" style=\\\"width:16px;height:16px;margin-inline: 5px;\\\" alt=\\\"51.LA\\\"> 提供数据统计服务</a>\"],\"theme\":{\"name\":\"Theme By Teek@1.0.2-2025.4.10\"},\"copyright\":{\"createYear\":2025,\"suffix\":\"程序员皮蛋鸽鸽\"},\"icpRecord\":{\"name\":\"湘ICP备2024064075号-1\",\"link\":\"https://beian.miit.gov.cn/\"},\"securityRecord\":{\"name\":\"湘公网安备43112402000148号\",\"link\":\"https://ywtb.mps.gov.cn/\"}},\"articleShare\":{\"enabled\":true},\"topArticle\":{\"enabled\":true,\"limit\":4,\"autoPage\":false,\"pageSpeed\":4000,\"dateFormat\":\"yyyy-MM-dd\"},\"docAnalysis\":{\"createTime\":\"2021-10-19\",\"statistics\":{\"provider\":\"busuanzi\"},\"wordCount\":true,\"readingTime\":true,\"appendInfo\":[{\"key\":\"index\",\"label\":\"序号\",\"value\":\"One\"}]},\"post\":{\"coverImgMode\":\"full\"},\"appreciation\":{\"position\":\"doc-after\",\"options\":{\"icon\":\"weChatPay\",\"expandTitle\":\"打赏支持\",\"collapseTitle\":\"下次一定\",\"content\":\"<img src='/vitepress-teek-docs/social-icons/wechat-QR.jpg'><img src='/vitepress-teek-docs/social-icons/zfb-QR.jpg'>\",\"expand\":true}},\"siteAnalytics\":{\"provider\":\"baidu\",\"options\":{\"id\":\"你的id\"}},\"logo\":\"/rabbit.svg\",\"darkModeSwitchLabel\":\"主题\",\"sidebarMenuLabel\":\"菜单\",\"returnToTopLabel\":\"返回顶部\",\"lastUpdatedText\":\"上次更新时间\",\"outline\":{\"level\":[2,4],\"label\":\"本页导航\"},\"docFooter\":{\"prev\":\"上一页\",\"next\":\"下一页\"},\"nav\":[{\"text\":\"首页\",\"link\":\"/\"},{\"text\":\"web开发\",\"items\":[{\"text\":\"前端\",\"items\":[{\"text\":\"Vue\",\"link\":\"/web开发/前端/Vue/\"}]},{\"text\":\"后端\",\"items\":[{\"text\":\"Cpp\",\"link\":\"/web开发/后端/Cpp/\"},{\"text\":\"Lua\",\"link\":\"/web开发/后端/Lua/\"},{\"text\":\"Nodejs\",\"link\":\"/web开发/后端/Nodejs/\"},{\"text\":\"Python\",\"link\":\"/web开发/后端/Python/\"},{\"text\":\"桌面应用开发\",\"link\":\"/web开发/后端/桌面应用开发/\"}]},{\"text\":\"开发者工具\",\"items\":[{\"text\":\"VSCode\",\"link\":\"/web开发/开发者工具/VSCode/\"}]},{\"text\":\"运维\",\"items\":[{\"text\":\"Linux\",\"link\":\"/web开发/运维/Linux/\"}]}]},{\"text\":\"索引\",\"items\":[{\"text\":\"分类\",\"link\":\"/categories\",\"activeMatch\":\"@pages/categories\"},{\"text\":\"标签\",\"link\":\"/tags\",\"activeMatch\":\"@pages/tags\"},{\"text\":\"归档\",\"link\":\"/archives\",\"activeMatch\":\"@pages/archives\"}],\"activeMatch\":\"@pages\"}],\"sidebar\":{\"/\":[],\"/web开发/\":[{\"collapsed\":true,\"items\":[{\"text\":\"前端\",\"collapsed\":true,\"items\":[{\"text\":\"Vue\",\"collapsed\":true,\"items\":[{\"text\":\"Vue快速入门\",\"collapsed\":true,\"link\":\"/web开发/前端/Vue/index\"}]}]},{\"text\":\"后端\",\"collapsed\":true,\"items\":[{\"text\":\"Cpp\",\"collapsed\":true,\"items\":[{\"text\":\"C++语言快速入门\",\"collapsed\":true,\"link\":\"/web开发/后端/Cpp/index\"}]},{\"text\":\"Lua\",\"collapsed\":true,\"items\":[{\"text\":\"Lua语言快速入门\",\"collapsed\":true,\"link\":\"/web开发/后端/Lua/index\"}]},{\"text\":\"Nodejs\",\"collapsed\":true,\"items\":[{\"text\":\"Nodejs 安装教程\",\"collapsed\":true,\"link\":\"/web开发/后端/Nodejs/index\"},{\"text\":\"模块化规范演进\",\"collapsed\":true,\"link\":\"/web开发/后端/Nodejs/模块化规范演进\"}]},{\"text\":\"Python\",\"collapsed\":true,\"items\":[{\"text\":\"Python 快速入门\",\"collapsed\":true,\"link\":\"/web开发/后端/Python/index\"},{\"text\":\"支付宝沙箱支付教程\",\"collapsed\":true,\"link\":\"/web开发/后端/Python/支付宝沙箱支付教程\"},{\"text\":\"爬取酷狗付费音乐\",\"collapsed\":true,\"link\":\"/web开发/后端/Python/爬取酷狗付费音乐\"}]},{\"text\":\"桌面应用开发\",\"collapsed\":true,\"items\":[{\"text\":\"全网最新最全的 electron 项目环境搭建方式与踩坑经验分享\",\"collapsed\":true,\"link\":\"/web开发/后端/桌面应用开发/index\"}]}]},{\"text\":\"开发者工具\",\"collapsed\":true,\"items\":[{\"text\":\"VSCode\",\"collapsed\":true,\"items\":[{\"text\":\"从零配置Linux与Windows互通的开发环境\",\"collapsed\":true,\"link\":\"/web开发/开发者工具/VSCode/从零配置Linux与Windows互通的开发环境\"}]}]},{\"text\":\"运维\",\"collapsed\":true,\"items\":[{\"text\":\"Linux\",\"collapsed\":true,\"items\":[{\"text\":\"Linux基础知识\",\"collapsed\":true,\"link\":\"/web开发/运维/Linux/index\"}]}]}]}],\"/web开发/前端/\":[{\"text\":\"Vue\",\"collapsed\":false,\"items\":[{\"text\":\"基础教程\",\"link\":\"/web开发/前端/Vue/index\"}]}],\"/web开发/后端/\":[{\"text\":\"Cpp\",\"collapsed\":false,\"items\":[{\"text\":\"基础教程\",\"link\":\"/web开发/后端/Cpp/index\"}]},{\"text\":\"Lua\",\"collapsed\":false,\"items\":[{\"text\":\"基础教程\",\"link\":\"/web开发/后端/Lua/index\"}]},{\"text\":\"Nodejs\",\"collapsed\":false,\"items\":[{\"text\":\"基础教程\",\"link\":\"/web开发/后端/Nodejs/index\"},{\"text\":\"模块化规范演进\",\"link\":\"/web开发/后端/Nodejs/模块化规范演进\"}]},{\"text\":\"Python\",\"collapsed\":false,\"items\":[{\"text\":\"基础教程\",\"link\":\"/web开发/后端/Python/index\"},{\"text\":\"支付宝沙箱支付教程\",\"link\":\"/web开发/后端/Python/支付宝沙箱支付教程\"},{\"text\":\"爬取酷狗付费音乐\",\"link\":\"/web开发/后端/Python/爬取酷狗付费音乐\"}]},{\"text\":\"桌面应用开发\",\"collapsed\":false,\"items\":[{\"text\":\"基础教程\",\"link\":\"/web开发/后端/桌面应用开发/index\"}]}],\"/web开发/开发者工具/\":[{\"text\":\"VSCode\",\"collapsed\":false,\"items\":[{\"text\":\"从零配置Linux与Windows互通的开发环境\",\"link\":\"/web开发/开发者工具/VSCode/从零配置Linux与Windows互通的开发环境\"}]}],\"/web开发/运维/\":[{\"text\":\"Linux\",\"collapsed\":false,\"items\":[{\"text\":\"基础教程\",\"link\":\"/web开发/运维/Linux/index\"}]}]},\"socialLinks\":[{\"icon\":\"github\",\"link\":\"https://github.com/ZhouYu2156\"}],\"search\":{\"provider\":\"local\",\"options\":{\"translations\":{\"button\":{\"buttonText\":\"搜索文档\",\"buttonAriaLabel\":\"搜索文档\"},\"modal\":{\"noResultsText\":\"无法找到相关结果\",\"resetButtonTitle\":\"清除查询条件\",\"displayDetails\":\"显示详情列表\",\"footer\":{\"selectText\":\"选择\",\"navigateText\":\"切换\",\"closeText\":\"关闭\"}}}}},\"editLink\":{\"text\":\"在 GitHub 上编辑此页\",\"pattern\":\"https://github.com/Kele-Bingtang/vitepress-theme-teek/edit/master/docs/:path\"},\"permalinks\":{\"map\":{\"@pages/archives\":\"/archives\",\"@pages/categories\":\"/categories\",\"@pages/tags\":\"/tags\",\"web开发/前端/Vue/index\":\"/pages/e1485a\",\"web开发/后端/Cpp/index\":\"/pages/2aeaba\",\"web开发/后端/Lua/index\":\"/pages/e7b99e\",\"web开发/后端/Nodejs/index\":\"/pages/b609ed\",\"web开发/后端/Nodejs/模块化规范演进\":\"/pages/d20f11\",\"web开发/后端/Python/index\":\"/pages/1fee48\",\"web开发/后端/Python/支付宝沙箱支付教程\":\"/pages/4f6a36\",\"web开发/后端/Python/爬取酷狗付费音乐\":\"/pages/624064\",\"web开发/后端/桌面应用开发/index\":\"/pages/75a1df\",\"web开发/开发者工具/VSCode/从零配置Linux与Windows互通的开发环境\":\"/pages/e47200\",\"web开发/运维/Linux/index\":\"/pages/92e12e\"},\"inv\":{\"/archives\":\"@pages/archives\",\"/categories\":\"@pages/categories\",\"/tags\":\"@pages/tags\",\"/pages/e1485a\":\"web开发/前端/Vue/index\",\"/pages/2aeaba\":\"web开发/后端/Cpp/index\",\"/pages/e7b99e\":\"web开发/后端/Lua/index\",\"/pages/b609ed\":\"web开发/后端/Nodejs/index\",\"/pages/d20f11\":\"web开发/后端/Nodejs/模块化规范演进\",\"/pages/1fee48\":\"web开发/后端/Python/index\",\"/pages/4f6a36\":\"web开发/后端/Python/支付宝沙箱支付教程\",\"/pages/624064\":\"web开发/后端/Python/爬取酷狗付费音乐\",\"/pages/75a1df\":\"web开发/后端/桌面应用开发/index\",\"/pages/e47200\":\"web开发/开发者工具/VSCode/从零配置Linux与Windows互通的开发环境\",\"/pages/92e12e\":\"web开发/运维/Linux/index\"}},\"docAnalysisInfo\":{\"fileList\":[{\"filePath\":\"/home/runner/work/vitepress-teek-docs/vitepress-teek-docs/src/web开发/前端/Vue/index.md\",\"relativePath\":\"web开发/前端/Vue/index.md\"},{\"filePath\":\"/home/runner/work/vitepress-teek-docs/vitepress-teek-docs/src/web开发/后端/Cpp/index.md\",\"relativePath\":\"web开发/后端/Cpp/index.md\"},{\"filePath\":\"/home/runner/work/vitepress-teek-docs/vitepress-teek-docs/src/web开发/后端/Lua/index.md\",\"relativePath\":\"web开发/后端/Lua/index.md\"},{\"filePath\":\"/home/runner/work/vitepress-teek-docs/vitepress-teek-docs/src/web开发/后端/Nodejs/index.md\",\"relativePath\":\"web开发/后端/Nodejs/index.md\"},{\"filePath\":\"/home/runner/work/vitepress-teek-docs/vitepress-teek-docs/src/web开发/后端/Nodejs/模块化规范演进.md\",\"relativePath\":\"web开发/后端/Nodejs/模块化规范演进.md\"},{\"filePath\":\"/home/runner/work/vitepress-teek-docs/vitepress-teek-docs/src/web开发/后端/Python/index.md\",\"relativePath\":\"web开发/后端/Python/index.md\"},{\"filePath\":\"/home/runner/work/vitepress-teek-docs/vitepress-teek-docs/src/web开发/后端/Python/支付宝沙箱支付教程.md\",\"relativePath\":\"web开发/后端/Python/支付宝沙箱支付教程.md\"},{\"filePath\":\"/home/runner/work/vitepress-teek-docs/vitepress-teek-docs/src/web开发/后端/Python/爬取酷狗付费音乐.md\",\"relativePath\":\"web开发/后端/Python/爬取酷狗付费音乐.md\"},{\"filePath\":\"/home/runner/work/vitepress-teek-docs/vitepress-teek-docs/src/web开发/后端/桌面应用开发/index.md\",\"relativePath\":\"web开发/后端/桌面应用开发/index.md\"},{\"filePath\":\"/home/runner/work/vitepress-teek-docs/vitepress-teek-docs/src/web开发/开发者工具/VSCode/从零配置Linux与Windows互通的开发环境.md\",\"relativePath\":\"web开发/开发者工具/VSCode/从零配置Linux与Windows互通的开发环境.md\"},{\"filePath\":\"/home/runner/work/vitepress-teek-docs/vitepress-teek-docs/src/web开发/运维/Linux/index.md\",\"relativePath\":\"web开发/运维/Linux/index.md\"}],\"totalFileWords\":13240,\"eachFileWords\":[{\"fileInfo\":{\"filePath\":\"/home/runner/work/vitepress-teek-docs/vitepress-teek-docs/src/web开发/前端/Vue/index.md\",\"relativePath\":\"web开发/前端/Vue/index.md\"},\"wordCount\":5,\"readingTime\":\"1\",\"frontmatter\":{\"date\":{},\"title\":\"Vue快速入门\",\"permalink\":\"/pages/e1485a\",\"categories\":[\"web开发\",\"前端\",\"Vue\"],\"coverImg\":\"/banner/5.webp\",\"description\":\"讲解Vue的快速上手\",\"article\":false}},{\"fileInfo\":{\"filePath\":\"/home/runner/work/vitepress-teek-docs/vitepress-teek-docs/src/web开发/后端/Cpp/index.md\",\"relativePath\":\"web开发/后端/Cpp/index.md\"},\"wordCount\":1050,\"readingTime\":\"4.4m\",\"frontmatter\":{\"date\":{},\"title\":\"C++语言快速入门\",\"categories\":[\"后端\"],\"tags\":[\"C++\"],\"description\":\"C++是一种静态类型的中级语言，综合了高级语言和低级语言的特点\",\"coverImg\":\"/banner/8.webp\",\"permalink\":\"/pages/2aeaba\"}},{\"fileInfo\":{\"filePath\":\"/home/runner/work/vitepress-teek-docs/vitepress-teek-docs/src/web开发/后端/Lua/index.md\",\"relativePath\":\"web开发/后端/Lua/index.md\"},\"wordCount\":1224,\"readingTime\":\"4.9m\",\"frontmatter\":{\"date\":{},\"title\":\"Lua语言快速入门\",\"categories\":[\"后端\"],\"tags\":[\"Lua\"],\"description\":\"Lua 是一款轻量级、高效灵活、跨平台的多范式编程语言\",\"coverImg\":\"/banner/1.webp\",\"permalink\":\"/pages/e7b99e\"}},{\"fileInfo\":{\"filePath\":\"/home/runner/work/vitepress-teek-docs/vitepress-teek-docs/src/web开发/后端/Nodejs/index.md\",\"relativePath\":\"web开发/后端/Nodejs/index.md\"},\"wordCount\":940,\"readingTime\":\"3.9m\",\"frontmatter\":{\"date\":{},\"layout\":\"doc\",\"title\":\"Nodejs 安装教程\",\"navbar\":true,\"sidebar\":true,\"aside\":true,\"footer\":false,\"pageClass\":null,\"head\":[[\"meta\",{\"name\":\"description\",\"content\":\"Nodejs 详细安装教程附带配置\"}],[\"meta\",{\"name\":\"keywords\",\"content\":\"保姆级Nodejs安装和配置教程\"}]],\"permalink\":\"/pages/b609ed\",\"categories\":[\"后端\"],\"tags\":[\"Nodejs\"],\"coverImg\":\"/screenshots/Nodejs/nodejs官网.png\",\"top\":true,\"sticky\":4,\"description\":\"windows版安装和配置Nodejs保姆级详细教程\"}},{\"fileInfo\":{\"filePath\":\"/home/runner/work/vitepress-teek-docs/vitepress-teek-docs/src/web开发/后端/Nodejs/模块化规范演进.md\",\"relativePath\":\"web开发/后端/Nodejs/模块化规范演进.md\"},\"wordCount\":1548,\"readingTime\":\"6.5m\",\"frontmatter\":{\"date\":{},\"title\":\"模块化规范演进\",\"permalink\":\"/pages/d20f11\",\"categories\":[\"后端\"],\"tags\":[\"Nodejs\"],\"coverImg\":\"/screenshots/Nodejs/JS模块化规范演进.png\",\"top\":true,\"sticky\":1,\"description\":\"简明扼要的概述了 JS 模块化规范演进的整个历史\"}},{\"fileInfo\":{\"filePath\":\"/home/runner/work/vitepress-teek-docs/vitepress-teek-docs/src/web开发/后端/Python/index.md\",\"relativePath\":\"web开发/后端/Python/index.md\"},\"wordCount\":0,\"readingTime\":\"1\",\"frontmatter\":{\"date\":{},\"title\":\"Python 快速入门\",\"permalink\":\"/pages/1fee48\",\"categories\":[\"后端\"],\"tags\":[\"Python\"],\"article\":false}},{\"fileInfo\":{\"filePath\":\"/home/runner/work/vitepress-teek-docs/vitepress-teek-docs/src/web开发/后端/Python/支付宝沙箱支付教程.md\",\"relativePath\":\"web开发/后端/Python/支付宝沙箱支付教程.md\"},\"wordCount\":4060,\"readingTime\":\"15.5m\",\"frontmatter\":{\"date\":{},\"title\":\"支付宝沙箱支付教程\",\"permalink\":\"/pages/4f6a36\",\"categories\":[\"后端\"],\"tags\":[\"Python\",\"Flask\"],\"coverImg\":\"/screenshots/支付宝沙箱支付详细使用教程/支付宝教程封面.png\",\"top\":true,\"sticky\":2,\"description\":\"详细介绍了在Python Web开发中集成支付宝沙箱支付的完整流程\"}},{\"fileInfo\":{\"filePath\":\"/home/runner/work/vitepress-teek-docs/vitepress-teek-docs/src/web开发/后端/Python/爬取酷狗付费音乐.md\",\"relativePath\":\"web开发/后端/Python/爬取酷狗付费音乐.md\"},\"wordCount\":1416,\"readingTime\":\"6.2m\",\"frontmatter\":{\"date\":{},\"title\":\"爬取酷狗付费音乐\",\"permalink\":\"/pages/624064\",\"categories\":[\"后端\"],\"tags\":[\"Python\",\"爬虫\"],\"article\":false}},{\"fileInfo\":{\"filePath\":\"/home/runner/work/vitepress-teek-docs/vitepress-teek-docs/src/web开发/后端/桌面应用开发/index.md\",\"relativePath\":\"web开发/后端/桌面应用开发/index.md\"},\"wordCount\":1368,\"readingTime\":\"5.6m\",\"frontmatter\":{\"date\":{},\"title\":\"全网最新最全的 electron 项目环境搭建方式与踩坑经验分享\",\"head\":[[\"meta\",{\"name\":\"description\",\"content\":\"全网最全最新 electron 项目环境搭建方式与踩坑经验分享，帮你避坑，少走弯路，节省时间，还等什么，快来参考一下我的 electron 环境搭建指南！\"},{\"name\":\"keywords\",\"content\":\"electron 项目环境搭建 踩坑经验分享\"}]],\"footer\":false,\"permalink\":\"/pages/75a1df\",\"categories\":[\"后端\"],\"tags\":[\"桌面应用开发\"],\"coverImg\":\"/screenshots/Nodejs/Electron安装踩坑经验总结.png\",\"top\":true,\"sticky\":5,\"description\":\"全网最全最新 electron 项目环境搭建方式与踩坑经验分享\"}},{\"fileInfo\":{\"filePath\":\"/home/runner/work/vitepress-teek-docs/vitepress-teek-docs/src/web开发/开发者工具/VSCode/从零配置Linux与Windows互通的开发环境.md\",\"relativePath\":\"web开发/开发者工具/VSCode/从零配置Linux与Windows互通的开发环境.md\"},\"wordCount\":1624,\"readingTime\":\"7.4m\",\"frontmatter\":{\"date\":{},\"title\":\"从零配置Linux与Windows互通的开发环境\",\"permalink\":\"/pages/e47200\",\"categories\":[\"web开发\",\"开发者工具\",\"VSCode\"],\"coverImg\":\"/screenshots/VSCode/搭建linux开发环境.png\",\"top\":true,\"sticky\":3,\"description\":\"从零打造 Linux 和 Windows 互通的开发环境\"}},{\"fileInfo\":{\"filePath\":\"/home/runner/work/vitepress-teek-docs/vitepress-teek-docs/src/web开发/运维/Linux/index.md\",\"relativePath\":\"web开发/运维/Linux/index.md\"},\"wordCount\":5,\"readingTime\":\"1\",\"frontmatter\":{\"date\":{},\"title\":\"Linux基础知识\",\"permalink\":\"/pages/92e12e\",\"categories\":[\"运维\"],\"tags\":[\"Linux\"],\"coverImg\":\"/banner/6.webp\",\"description\":\"介绍Linux的基本使用\"}}],\"lastCommitTime\":\"2025-04-20 01:24:22\"},\"catalogues\":{\"arr\":[],\"map\":{},\"inv\":{}},\"posts\":{\"originPosts\":[{\"url\":\"/web开发/后端/Cpp/\",\"frontmatter\":{\"date\":\"2025-04-19 15:24:14\",\"title\":\"C++语言快速入门\",\"categories\":[\"后端\"],\"tags\":[\"C++\"],\"description\":\"C++是一种静态类型的中级语言，综合了高级语言和低级语言的特点\",\"coverImg\":\"/banner/8.webp\",\"permalink\":\"/pages/2aeaba\"},\"author\":{\"name\":\"程序员皮蛋鸽鸽\",\"link\":\"https://github.com/ZhouYu2156\"},\"title\":\"C++语言快速入门\",\"date\":\"2025-04-19 15:24:14\",\"excerpt\":\"\",\"capture\":\"C++语言快速入门\\n 安装 `C++` 编译环境\\n```bash\\n $ sudo subscription-manager repos --enable codeready-builder-for-rhel-8-x86_64-rpms\\n$ sudo dnf install -y gcc gcc-c++ make\\n 或者安装完整的开发工具组（包含更多工具如gdb、git等）\\n$ sudo dnf groupinstall -y \\\"Development Tools\\\"\\n 检查安装\\n$ gcc --version\\n$ g++ --version\\n$ make --version\\n```\\n 第一个 `C++` 程序\\n```c++\\n// main.cpp\\ninclude &lt;iostream\\nusing namespace std;\\nint main()\\n{\\n    cout &lt;&lt; \"},{\"url\":\"/web开发/后端/Lua/\",\"frontmatter\":{\"date\":\"2025-04-19 07:24:14\",\"title\":\"Lua语言快速入门\",\"categories\":[\"后端\"],\"tags\":[\"Lua\"],\"description\":\"Lua 是一款轻量级、高效灵活、跨平台的多范式编程语言\",\"coverImg\":\"/banner/1.webp\",\"permalink\":\"/pages/e7b99e\"},\"author\":{\"name\":\"程序员皮蛋鸽鸽\",\"link\":\"https://github.com/ZhouYu2156\"},\"title\":\"Lua语言快速入门\",\"date\":\"2025-04-19 07:24:14\",\"excerpt\":\"\",\"capture\":\"Lua语言快速入门\\n 环境安装\\n- 了解更多，请参考：菜鸟教程-Lua 环境安装\\n- Linux 系统(CentOS)\\n```bash\\n$ sudo yum install -y epel-release\\n$ sudo yum install -y lua\\n```\\n 快速体验\\n 交互式\\n```bash\\n$ man lua                  查看 lua 命令行帮助说明\\n$ lua -v                   查看版本信息\\n$ lua -i                   进入交互模式\\n\\n```\\n 脚本式编程\\n- 创建 `*.lua` 文件\\n```lua\\n!/usr/local/bin/lua\\nprint(\\\"Hello world!\\\")\\n```\\n- 赋予可执行权限\\n```bash\\n$ chmod 700 hello.lua\\n```\\n- 执行脚本\\n```bas\"},{\"url\":\"/web开发/后端/Nodejs/\",\"frontmatter\":{\"date\":\"2025-04-19 22:04:01\",\"layout\":\"doc\",\"title\":\"Nodejs 安装教程\",\"navbar\":true,\"sidebar\":true,\"aside\":true,\"footer\":false,\"pageClass\":null,\"head\":[[\"meta\",{\"name\":\"description\",\"content\":\"Nodejs 详细安装教程附带配置\"}],[\"meta\",{\"name\":\"keywords\",\"content\":\"保姆级Nodejs安装和配置教程\"}]],\"permalink\":\"/pages/b609ed\",\"categories\":[\"后端\"],\"tags\":[\"Nodejs\"],\"coverImg\":\"/screenshots/Nodejs/nodejs官网.png\",\"top\":true,\"sticky\":4,\"description\":\"windows版安装和配置Nodejs保姆级详细教程\"},\"author\":{\"name\":\"程序员皮蛋鸽鸽\",\"link\":\"https://github.com/ZhouYu2156\"},\"title\":\"Nodejs 安装教程\",\"date\":\"2025-04-19 22:04:01\",\"excerpt\":\"\",\"capture\":\"Nodejs 安装教程\\r\\n\\r\\n 一、安装 `Nodejs`\\r\\n\\r\\n::: info 访问`Nodejs`官网\\r\\n点击前往：Nodejs 官网\\r\\n\\r\\n一直点击下一步安装完即可（可以选择自行选择安装路径）。\\r\\n:::\\r\\n\\r\\n\\r\\n\\r\\n- 安装完成后，打开`cmd`，输入`node -v`，如果显示版本号，则安装成功。\\r\\n\\r\\n```bash\\r\\n$ node -v\\r\\n$ npm -v\\r\\n```\\r\\n\\r\\n 二、配置\\r\\n\\r\\n\\r\\n\\r\\n 1. 创建目录\\r\\n\\r\\n创建`node_global`和`node_cache`目录，并且在`node_global`目录下创建`node_modules`目录。\\r\\n\\r\\n```bash\\r\\n 进入 E:/enviroments/nodejs/ 路径下\\r\\nmkdir -p node_global/node_modules node_cache\\r\\n```\\r\\n\\r\\n 2. 设置权限\\r\\n\\r\"},{\"url\":\"/web开发/后端/Nodejs/模块化规范演进\",\"frontmatter\":{\"date\":\"2025-04-19 22:02:31\",\"title\":\"模块化规范演进\",\"permalink\":\"/pages/d20f11\",\"categories\":[\"后端\"],\"tags\":[\"Nodejs\"],\"coverImg\":\"/screenshots/Nodejs/JS模块化规范演进.png\",\"top\":true,\"sticky\":1,\"description\":\"简明扼要的概述了 JS 模块化规范演进的整个历史\"},\"author\":{\"name\":\"程序员皮蛋鸽鸽\",\"link\":\"https://github.com/ZhouYu2156\"},\"title\":\"模块化规范演进\",\"date\":\"2025-04-19 22:02:31\",\"excerpt\":\"\",\"capture\":\"JS 模块化规范演进历史\\r\\n\\r\\n 1. 原始的 JS 模块化\\r\\n\\r\\n每个人编写的`模块`通过 `script`标签引入到`页面`中，然后就可以使用`模块`中的内容了。\\r\\n\\r\\n 2. CommonJS 模块化规范\\r\\n\\r\\n随着 `nodejs` 的诞生，为了解决在 `nodejs` 中的模块化问题，社区自发形成了很多的模块化方案，其中 `CommonJS` 模块化规范得到了时间的检验，并最终确定为主流的模块化规范，这是一套社区的模块化规范，使用 `commonjs` 规范编写的模块并不能直接在浏览器中运行。后来出现了`browserify`，`webpack` 等编译、打包工具，使得 `CommonJS` 模块化规范编写的代码经过编译、打包后也可以用于浏览器中运行。\\r\\n\\r\\n::: code-group\\r\\n\\r\\n```js [utils.js]\\r\\n// 1. 使用 exports 导出模块\\r\\nex\"},{\"url\":\"/web开发/后端/Python/支付宝沙箱支付教程\",\"frontmatter\":{\"date\":\"2025-04-19 22:58:03\",\"title\":\"支付宝沙箱支付教程\",\"permalink\":\"/pages/4f6a36\",\"categories\":[\"后端\"],\"tags\":[\"Python\",\"Flask\"],\"coverImg\":\"/screenshots/支付宝沙箱支付详细使用教程/支付宝教程封面.png\",\"top\":true,\"sticky\":2,\"description\":\"详细介绍了在Python Web开发中集成支付宝沙箱支付的完整流程\"},\"author\":{\"name\":\"程序员皮蛋鸽鸽\",\"link\":\"https://github.com/ZhouYu2156\"},\"title\":\"支付宝沙箱支付教程\",\"date\":\"2025-04-19 22:58:03\",\"excerpt\":\"\",\"capture\":\"支付宝沙箱支付详细使用教程\\n详细介绍支付宝沙箱支付的全流程配置最新教程，通俗易懂，图文并茂，手把手教你一步步实现完整沙箱支付功能。亲测可用，文章撰写非常用心，包你学会！\\n&lt;!--@include: @/public/snippets/preface.md--\\n 一、前言\\n由于支付宝官方对Java等语言的文档说明支持较好，在Python方面相对较弱，而且依赖包还安装不了等Bug，所以接下来我将分享《在Python Web开发中如何集成支付宝沙箱支付》的详细教程，如果这篇文章有帮助到你，请记得关注我的公众号，我会定期分享实用的技术教程。如果没有帮到你，也可以留个免费的关注，以后或许会有你感兴趣的教程，而且文章质量都超高哦！\\n在个人平常（或准备后续对接支付宝正式支付环境）的项目中，使用沙箱支付来测试支付功能显得很有必要；如果是在校大学生的话，在你的项目中集成支付宝的沙箱支付，也能让你的项目\"},{\"url\":\"/web开发/后端/桌面应用开发/\",\"frontmatter\":{\"date\":\"2025-04-19 22:52:13\",\"title\":\"全网最新最全的 electron 项目环境搭建方式与踩坑经验分享\",\"head\":[[\"meta\",{\"name\":\"description\",\"content\":\"全网最全最新 electron 项目环境搭建方式与踩坑经验分享，帮你避坑，少走弯路，节省时间，还等什么，快来参考一下我的 electron 环境搭建指南！\"},{\"name\":\"keywords\",\"content\":\"electron 项目环境搭建 踩坑经验分享\"}]],\"footer\":false,\"permalink\":\"/pages/75a1df\",\"categories\":[\"后端\"],\"tags\":[\"桌面应用开发\"],\"coverImg\":\"/screenshots/Nodejs/Electron安装踩坑经验总结.png\",\"top\":true,\"sticky\":5,\"description\":\"全网最全最新 electron 项目环境搭建方式与踩坑经验分享\"},\"author\":{\"name\":\"程序员皮蛋鸽鸽\",\"link\":\"https://github.com/ZhouYu2156\"},\"title\":\"全网最新最全的 electron 项目环境搭建方式与踩坑经验分享\",\"date\":\"2025-04-19 22:52:13\",\"excerpt\":\"\",\"capture\":\"&lt;!--@include: @/public/snippets/preface.md--\\r\\n\\r\\n&gt; 本文项目搭建演示的`nodejs`版本如下：\\r\\n\\r\\n```bash\\r\\n$ node -v\\r\\n v22.14.0\\r\\n```\\r\\n\\r\\n 一、官方文档手动搭建\\r\\n\\r\\n文档地址：快速入门 | Electron，按照文档步骤操作即可，项目只包含了`electron`依赖，仅仅只是一个`hello world`展示。\\r\\n\\r\\n&gt; ⚠️ 注意：失败！我设置了代理（网络问题）和切换镜像源（淘宝）等操作都没用。截图如下：\\r\\n\\r\\n\\r\\n\\r\\n 二、官方脚手架方式创建\\r\\n\\r\\n- 创建项目命令如下：\\r\\n\\r\\n```bash\\r\\n$ npm init electron-app@latest my-app -- --template=vite  my-app:项目名(自定义)\\r\\n 或\\r\\n$ npm create \"},{\"url\":\"/web开发/开发者工具/VSCode/从零配置Linux与Windows互通的开发环境\",\"frontmatter\":{\"date\":\"2025-04-19 23:19:49\",\"title\":\"从零配置Linux与Windows互通的开发环境\",\"permalink\":\"/pages/e47200\",\"categories\":[\"web开发\",\"开发者工具\",\"VSCode\"],\"coverImg\":\"/screenshots/VSCode/搭建linux开发环境.png\",\"top\":true,\"sticky\":3,\"description\":\"从零打造 Linux 和 Windows 互通的开发环境\"},\"author\":{\"name\":\"程序员皮蛋鸽鸽\",\"link\":\"https://github.com/ZhouYu2156\"},\"title\":\"从零配置Linux与Windows互通的开发环境\",\"date\":\"2025-04-19 23:19:49\",\"excerpt\":\"\",\"capture\":\"从零配置 Linux 与 Windows 互通的开发环境\\n以下配置基于 `Red Hat 8`（红帽8）的 Linux 最基础（无界面）系统，不同的 Linux 发行版会有一些区别，请注意自己系统的是否符合该以上条件。\\n 前置条件\\n\\n```bash\\n 关闭防火墙\\n$ systemctl stop firewalld --now     立即生效\\n$ systemctl status firewalld\\n$ systemctl disable firewalld        永久禁用\\n 关闭 selinux 安全策略\\n$ setenforce 0       本次生效\\n$ getenforce         验证\\n$ sed -i 's/SELINUX=enforcing/SELINUX=disabled/' /etc/selinux/config     改写配置文件，永久关闭\\n```\"},{\"url\":\"/web开发/运维/Linux/\",\"frontmatter\":{\"date\":\"2025-04-19 04:15:01\",\"title\":\"Linux基础知识\",\"permalink\":\"/pages/92e12e\",\"categories\":[\"运维\"],\"tags\":[\"Linux\"],\"coverImg\":\"/banner/6.webp\",\"description\":\"介绍Linux的基本使用\"},\"author\":{\"name\":\"程序员皮蛋鸽鸽\",\"link\":\"https://github.com/ZhouYu2156\"},\"title\":\"Linux基础知识\",\"date\":\"2025-04-19 04:15:01\",\"excerpt\":\"\",\"capture\":\"Linux基础知识\"}],\"sortPostsByDateAndSticky\":[{\"url\":\"/web开发/后端/Nodejs/模块化规范演进\",\"frontmatter\":{\"date\":\"2025-04-19 22:02:31\",\"title\":\"模块化规范演进\",\"permalink\":\"/pages/d20f11\",\"categories\":[\"后端\"],\"tags\":[\"Nodejs\"],\"coverImg\":\"/screenshots/Nodejs/JS模块化规范演进.png\",\"top\":true,\"sticky\":1,\"description\":\"简明扼要的概述了 JS 模块化规范演进的整个历史\"},\"author\":{\"name\":\"程序员皮蛋鸽鸽\",\"link\":\"https://github.com/ZhouYu2156\"},\"title\":\"模块化规范演进\",\"date\":\"2025-04-19 22:02:31\",\"excerpt\":\"\",\"capture\":\"JS 模块化规范演进历史\\r\\n\\r\\n 1. 原始的 JS 模块化\\r\\n\\r\\n每个人编写的`模块`通过 `script`标签引入到`页面`中，然后就可以使用`模块`中的内容了。\\r\\n\\r\\n 2. CommonJS 模块化规范\\r\\n\\r\\n随着 `nodejs` 的诞生，为了解决在 `nodejs` 中的模块化问题，社区自发形成了很多的模块化方案，其中 `CommonJS` 模块化规范得到了时间的检验，并最终确定为主流的模块化规范，这是一套社区的模块化规范，使用 `commonjs` 规范编写的模块并不能直接在浏览器中运行。后来出现了`browserify`，`webpack` 等编译、打包工具，使得 `CommonJS` 模块化规范编写的代码经过编译、打包后也可以用于浏览器中运行。\\r\\n\\r\\n::: code-group\\r\\n\\r\\n```js [utils.js]\\r\\n// 1. 使用 exports 导出模块\\r\\nex\"},{\"url\":\"/web开发/后端/Python/支付宝沙箱支付教程\",\"frontmatter\":{\"date\":\"2025-04-19 22:58:03\",\"title\":\"支付宝沙箱支付教程\",\"permalink\":\"/pages/4f6a36\",\"categories\":[\"后端\"],\"tags\":[\"Python\",\"Flask\"],\"coverImg\":\"/screenshots/支付宝沙箱支付详细使用教程/支付宝教程封面.png\",\"top\":true,\"sticky\":2,\"description\":\"详细介绍了在Python Web开发中集成支付宝沙箱支付的完整流程\"},\"author\":{\"name\":\"程序员皮蛋鸽鸽\",\"link\":\"https://github.com/ZhouYu2156\"},\"title\":\"支付宝沙箱支付教程\",\"date\":\"2025-04-19 22:58:03\",\"excerpt\":\"\",\"capture\":\"支付宝沙箱支付详细使用教程\\n详细介绍支付宝沙箱支付的全流程配置最新教程，通俗易懂，图文并茂，手把手教你一步步实现完整沙箱支付功能。亲测可用，文章撰写非常用心，包你学会！\\n&lt;!--@include: @/public/snippets/preface.md--\\n 一、前言\\n由于支付宝官方对Java等语言的文档说明支持较好，在Python方面相对较弱，而且依赖包还安装不了等Bug，所以接下来我将分享《在Python Web开发中如何集成支付宝沙箱支付》的详细教程，如果这篇文章有帮助到你，请记得关注我的公众号，我会定期分享实用的技术教程。如果没有帮到你，也可以留个免费的关注，以后或许会有你感兴趣的教程，而且文章质量都超高哦！\\n在个人平常（或准备后续对接支付宝正式支付环境）的项目中，使用沙箱支付来测试支付功能显得很有必要；如果是在校大学生的话，在你的项目中集成支付宝的沙箱支付，也能让你的项目\"},{\"url\":\"/web开发/开发者工具/VSCode/从零配置Linux与Windows互通的开发环境\",\"frontmatter\":{\"date\":\"2025-04-19 23:19:49\",\"title\":\"从零配置Linux与Windows互通的开发环境\",\"permalink\":\"/pages/e47200\",\"categories\":[\"web开发\",\"开发者工具\",\"VSCode\"],\"coverImg\":\"/screenshots/VSCode/搭建linux开发环境.png\",\"top\":true,\"sticky\":3,\"description\":\"从零打造 Linux 和 Windows 互通的开发环境\"},\"author\":{\"name\":\"程序员皮蛋鸽鸽\",\"link\":\"https://github.com/ZhouYu2156\"},\"title\":\"从零配置Linux与Windows互通的开发环境\",\"date\":\"2025-04-19 23:19:49\",\"excerpt\":\"\",\"capture\":\"从零配置 Linux 与 Windows 互通的开发环境\\n以下配置基于 `Red Hat 8`（红帽8）的 Linux 最基础（无界面）系统，不同的 Linux 发行版会有一些区别，请注意自己系统的是否符合该以上条件。\\n 前置条件\\n\\n```bash\\n 关闭防火墙\\n$ systemctl stop firewalld --now     立即生效\\n$ systemctl status firewalld\\n$ systemctl disable firewalld        永久禁用\\n 关闭 selinux 安全策略\\n$ setenforce 0       本次生效\\n$ getenforce         验证\\n$ sed -i 's/SELINUX=enforcing/SELINUX=disabled/' /etc/selinux/config     改写配置文件，永久关闭\\n```\"},{\"url\":\"/web开发/后端/Nodejs/\",\"frontmatter\":{\"date\":\"2025-04-19 22:04:01\",\"layout\":\"doc\",\"title\":\"Nodejs 安装教程\",\"navbar\":true,\"sidebar\":true,\"aside\":true,\"footer\":false,\"pageClass\":null,\"head\":[[\"meta\",{\"name\":\"description\",\"content\":\"Nodejs 详细安装教程附带配置\"}],[\"meta\",{\"name\":\"keywords\",\"content\":\"保姆级Nodejs安装和配置教程\"}]],\"permalink\":\"/pages/b609ed\",\"categories\":[\"后端\"],\"tags\":[\"Nodejs\"],\"coverImg\":\"/screenshots/Nodejs/nodejs官网.png\",\"top\":true,\"sticky\":4,\"description\":\"windows版安装和配置Nodejs保姆级详细教程\"},\"author\":{\"name\":\"程序员皮蛋鸽鸽\",\"link\":\"https://github.com/ZhouYu2156\"},\"title\":\"Nodejs 安装教程\",\"date\":\"2025-04-19 22:04:01\",\"excerpt\":\"\",\"capture\":\"Nodejs 安装教程\\r\\n\\r\\n 一、安装 `Nodejs`\\r\\n\\r\\n::: info 访问`Nodejs`官网\\r\\n点击前往：Nodejs 官网\\r\\n\\r\\n一直点击下一步安装完即可（可以选择自行选择安装路径）。\\r\\n:::\\r\\n\\r\\n\\r\\n\\r\\n- 安装完成后，打开`cmd`，输入`node -v`，如果显示版本号，则安装成功。\\r\\n\\r\\n```bash\\r\\n$ node -v\\r\\n$ npm -v\\r\\n```\\r\\n\\r\\n 二、配置\\r\\n\\r\\n\\r\\n\\r\\n 1. 创建目录\\r\\n\\r\\n创建`node_global`和`node_cache`目录，并且在`node_global`目录下创建`node_modules`目录。\\r\\n\\r\\n```bash\\r\\n 进入 E:/enviroments/nodejs/ 路径下\\r\\nmkdir -p node_global/node_modules node_cache\\r\\n```\\r\\n\\r\\n 2. 设置权限\\r\\n\\r\"},{\"url\":\"/web开发/后端/桌面应用开发/\",\"frontmatter\":{\"date\":\"2025-04-19 22:52:13\",\"title\":\"全网最新最全的 electron 项目环境搭建方式与踩坑经验分享\",\"head\":[[\"meta\",{\"name\":\"description\",\"content\":\"全网最全最新 electron 项目环境搭建方式与踩坑经验分享，帮你避坑，少走弯路，节省时间，还等什么，快来参考一下我的 electron 环境搭建指南！\"},{\"name\":\"keywords\",\"content\":\"electron 项目环境搭建 踩坑经验分享\"}]],\"footer\":false,\"permalink\":\"/pages/75a1df\",\"categories\":[\"后端\"],\"tags\":[\"桌面应用开发\"],\"coverImg\":\"/screenshots/Nodejs/Electron安装踩坑经验总结.png\",\"top\":true,\"sticky\":5,\"description\":\"全网最全最新 electron 项目环境搭建方式与踩坑经验分享\"},\"author\":{\"name\":\"程序员皮蛋鸽鸽\",\"link\":\"https://github.com/ZhouYu2156\"},\"title\":\"全网最新最全的 electron 项目环境搭建方式与踩坑经验分享\",\"date\":\"2025-04-19 22:52:13\",\"excerpt\":\"\",\"capture\":\"&lt;!--@include: @/public/snippets/preface.md--\\r\\n\\r\\n&gt; 本文项目搭建演示的`nodejs`版本如下：\\r\\n\\r\\n```bash\\r\\n$ node -v\\r\\n v22.14.0\\r\\n```\\r\\n\\r\\n 一、官方文档手动搭建\\r\\n\\r\\n文档地址：快速入门 | Electron，按照文档步骤操作即可，项目只包含了`electron`依赖，仅仅只是一个`hello world`展示。\\r\\n\\r\\n&gt; ⚠️ 注意：失败！我设置了代理（网络问题）和切换镜像源（淘宝）等操作都没用。截图如下：\\r\\n\\r\\n\\r\\n\\r\\n 二、官方脚手架方式创建\\r\\n\\r\\n- 创建项目命令如下：\\r\\n\\r\\n```bash\\r\\n$ npm init electron-app@latest my-app -- --template=vite  my-app:项目名(自定义)\\r\\n 或\\r\\n$ npm create \"},{\"url\":\"/web开发/后端/Cpp/\",\"frontmatter\":{\"date\":\"2025-04-19 15:24:14\",\"title\":\"C++语言快速入门\",\"categories\":[\"后端\"],\"tags\":[\"C++\"],\"description\":\"C++是一种静态类型的中级语言，综合了高级语言和低级语言的特点\",\"coverImg\":\"/banner/8.webp\",\"permalink\":\"/pages/2aeaba\"},\"author\":{\"name\":\"程序员皮蛋鸽鸽\",\"link\":\"https://github.com/ZhouYu2156\"},\"title\":\"C++语言快速入门\",\"date\":\"2025-04-19 15:24:14\",\"excerpt\":\"\",\"capture\":\"C++语言快速入门\\n 安装 `C++` 编译环境\\n```bash\\n $ sudo subscription-manager repos --enable codeready-builder-for-rhel-8-x86_64-rpms\\n$ sudo dnf install -y gcc gcc-c++ make\\n 或者安装完整的开发工具组（包含更多工具如gdb、git等）\\n$ sudo dnf groupinstall -y \\\"Development Tools\\\"\\n 检查安装\\n$ gcc --version\\n$ g++ --version\\n$ make --version\\n```\\n 第一个 `C++` 程序\\n```c++\\n// main.cpp\\ninclude &lt;iostream\\nusing namespace std;\\nint main()\\n{\\n    cout &lt;&lt; \"},{\"url\":\"/web开发/后端/Lua/\",\"frontmatter\":{\"date\":\"2025-04-19 07:24:14\",\"title\":\"Lua语言快速入门\",\"categories\":[\"后端\"],\"tags\":[\"Lua\"],\"description\":\"Lua 是一款轻量级、高效灵活、跨平台的多范式编程语言\",\"coverImg\":\"/banner/1.webp\",\"permalink\":\"/pages/e7b99e\"},\"author\":{\"name\":\"程序员皮蛋鸽鸽\",\"link\":\"https://github.com/ZhouYu2156\"},\"title\":\"Lua语言快速入门\",\"date\":\"2025-04-19 07:24:14\",\"excerpt\":\"\",\"capture\":\"Lua语言快速入门\\n 环境安装\\n- 了解更多，请参考：菜鸟教程-Lua 环境安装\\n- Linux 系统(CentOS)\\n```bash\\n$ sudo yum install -y epel-release\\n$ sudo yum install -y lua\\n```\\n 快速体验\\n 交互式\\n```bash\\n$ man lua                  查看 lua 命令行帮助说明\\n$ lua -v                   查看版本信息\\n$ lua -i                   进入交互模式\\n\\n```\\n 脚本式编程\\n- 创建 `*.lua` 文件\\n```lua\\n!/usr/local/bin/lua\\nprint(\\\"Hello world!\\\")\\n```\\n- 赋予可执行权限\\n```bash\\n$ chmod 700 hello.lua\\n```\\n- 执行脚本\\n```bas\"},{\"url\":\"/web开发/运维/Linux/\",\"frontmatter\":{\"date\":\"2025-04-19 04:15:01\",\"title\":\"Linux基础知识\",\"permalink\":\"/pages/92e12e\",\"categories\":[\"运维\"],\"tags\":[\"Linux\"],\"coverImg\":\"/banner/6.webp\",\"description\":\"介绍Linux的基本使用\"},\"author\":{\"name\":\"程序员皮蛋鸽鸽\",\"link\":\"https://github.com/ZhouYu2156\"},\"title\":\"Linux基础知识\",\"date\":\"2025-04-19 04:15:01\",\"excerpt\":\"\",\"capture\":\"Linux基础知识\"}],\"sortPostsByDate\":[{\"url\":\"/web开发/开发者工具/VSCode/从零配置Linux与Windows互通的开发环境\",\"frontmatter\":{\"date\":\"2025-04-19 23:19:49\",\"title\":\"从零配置Linux与Windows互通的开发环境\",\"permalink\":\"/pages/e47200\",\"categories\":[\"web开发\",\"开发者工具\",\"VSCode\"],\"coverImg\":\"/screenshots/VSCode/搭建linux开发环境.png\",\"top\":true,\"sticky\":3,\"description\":\"从零打造 Linux 和 Windows 互通的开发环境\"},\"author\":{\"name\":\"程序员皮蛋鸽鸽\",\"link\":\"https://github.com/ZhouYu2156\"},\"title\":\"从零配置Linux与Windows互通的开发环境\",\"date\":\"2025-04-19 23:19:49\",\"excerpt\":\"\",\"capture\":\"从零配置 Linux 与 Windows 互通的开发环境\\n以下配置基于 `Red Hat 8`（红帽8）的 Linux 最基础（无界面）系统，不同的 Linux 发行版会有一些区别，请注意自己系统的是否符合该以上条件。\\n 前置条件\\n\\n```bash\\n 关闭防火墙\\n$ systemctl stop firewalld --now     立即生效\\n$ systemctl status firewalld\\n$ systemctl disable firewalld        永久禁用\\n 关闭 selinux 安全策略\\n$ setenforce 0       本次生效\\n$ getenforce         验证\\n$ sed -i 's/SELINUX=enforcing/SELINUX=disabled/' /etc/selinux/config     改写配置文件，永久关闭\\n```\"},{\"url\":\"/web开发/后端/Python/支付宝沙箱支付教程\",\"frontmatter\":{\"date\":\"2025-04-19 22:58:03\",\"title\":\"支付宝沙箱支付教程\",\"permalink\":\"/pages/4f6a36\",\"categories\":[\"后端\"],\"tags\":[\"Python\",\"Flask\"],\"coverImg\":\"/screenshots/支付宝沙箱支付详细使用教程/支付宝教程封面.png\",\"top\":true,\"sticky\":2,\"description\":\"详细介绍了在Python Web开发中集成支付宝沙箱支付的完整流程\"},\"author\":{\"name\":\"程序员皮蛋鸽鸽\",\"link\":\"https://github.com/ZhouYu2156\"},\"title\":\"支付宝沙箱支付教程\",\"date\":\"2025-04-19 22:58:03\",\"excerpt\":\"\",\"capture\":\"支付宝沙箱支付详细使用教程\\n详细介绍支付宝沙箱支付的全流程配置最新教程，通俗易懂，图文并茂，手把手教你一步步实现完整沙箱支付功能。亲测可用，文章撰写非常用心，包你学会！\\n&lt;!--@include: @/public/snippets/preface.md--\\n 一、前言\\n由于支付宝官方对Java等语言的文档说明支持较好，在Python方面相对较弱，而且依赖包还安装不了等Bug，所以接下来我将分享《在Python Web开发中如何集成支付宝沙箱支付》的详细教程，如果这篇文章有帮助到你，请记得关注我的公众号，我会定期分享实用的技术教程。如果没有帮到你，也可以留个免费的关注，以后或许会有你感兴趣的教程，而且文章质量都超高哦！\\n在个人平常（或准备后续对接支付宝正式支付环境）的项目中，使用沙箱支付来测试支付功能显得很有必要；如果是在校大学生的话，在你的项目中集成支付宝的沙箱支付，也能让你的项目\"},{\"url\":\"/web开发/后端/桌面应用开发/\",\"frontmatter\":{\"date\":\"2025-04-19 22:52:13\",\"title\":\"全网最新最全的 electron 项目环境搭建方式与踩坑经验分享\",\"head\":[[\"meta\",{\"name\":\"description\",\"content\":\"全网最全最新 electron 项目环境搭建方式与踩坑经验分享，帮你避坑，少走弯路，节省时间，还等什么，快来参考一下我的 electron 环境搭建指南！\"},{\"name\":\"keywords\",\"content\":\"electron 项目环境搭建 踩坑经验分享\"}]],\"footer\":false,\"permalink\":\"/pages/75a1df\",\"categories\":[\"后端\"],\"tags\":[\"桌面应用开发\"],\"coverImg\":\"/screenshots/Nodejs/Electron安装踩坑经验总结.png\",\"top\":true,\"sticky\":5,\"description\":\"全网最全最新 electron 项目环境搭建方式与踩坑经验分享\"},\"author\":{\"name\":\"程序员皮蛋鸽鸽\",\"link\":\"https://github.com/ZhouYu2156\"},\"title\":\"全网最新最全的 electron 项目环境搭建方式与踩坑经验分享\",\"date\":\"2025-04-19 22:52:13\",\"excerpt\":\"\",\"capture\":\"&lt;!--@include: @/public/snippets/preface.md--\\r\\n\\r\\n&gt; 本文项目搭建演示的`nodejs`版本如下：\\r\\n\\r\\n```bash\\r\\n$ node -v\\r\\n v22.14.0\\r\\n```\\r\\n\\r\\n 一、官方文档手动搭建\\r\\n\\r\\n文档地址：快速入门 | Electron，按照文档步骤操作即可，项目只包含了`electron`依赖，仅仅只是一个`hello world`展示。\\r\\n\\r\\n&gt; ⚠️ 注意：失败！我设置了代理（网络问题）和切换镜像源（淘宝）等操作都没用。截图如下：\\r\\n\\r\\n\\r\\n\\r\\n 二、官方脚手架方式创建\\r\\n\\r\\n- 创建项目命令如下：\\r\\n\\r\\n```bash\\r\\n$ npm init electron-app@latest my-app -- --template=vite  my-app:项目名(自定义)\\r\\n 或\\r\\n$ npm create \"},{\"url\":\"/web开发/后端/Nodejs/\",\"frontmatter\":{\"date\":\"2025-04-19 22:04:01\",\"layout\":\"doc\",\"title\":\"Nodejs 安装教程\",\"navbar\":true,\"sidebar\":true,\"aside\":true,\"footer\":false,\"pageClass\":null,\"head\":[[\"meta\",{\"name\":\"description\",\"content\":\"Nodejs 详细安装教程附带配置\"}],[\"meta\",{\"name\":\"keywords\",\"content\":\"保姆级Nodejs安装和配置教程\"}]],\"permalink\":\"/pages/b609ed\",\"categories\":[\"后端\"],\"tags\":[\"Nodejs\"],\"coverImg\":\"/screenshots/Nodejs/nodejs官网.png\",\"top\":true,\"sticky\":4,\"description\":\"windows版安装和配置Nodejs保姆级详细教程\"},\"author\":{\"name\":\"程序员皮蛋鸽鸽\",\"link\":\"https://github.com/ZhouYu2156\"},\"title\":\"Nodejs 安装教程\",\"date\":\"2025-04-19 22:04:01\",\"excerpt\":\"\",\"capture\":\"Nodejs 安装教程\\r\\n\\r\\n 一、安装 `Nodejs`\\r\\n\\r\\n::: info 访问`Nodejs`官网\\r\\n点击前往：Nodejs 官网\\r\\n\\r\\n一直点击下一步安装完即可（可以选择自行选择安装路径）。\\r\\n:::\\r\\n\\r\\n\\r\\n\\r\\n- 安装完成后，打开`cmd`，输入`node -v`，如果显示版本号，则安装成功。\\r\\n\\r\\n```bash\\r\\n$ node -v\\r\\n$ npm -v\\r\\n```\\r\\n\\r\\n 二、配置\\r\\n\\r\\n\\r\\n\\r\\n 1. 创建目录\\r\\n\\r\\n创建`node_global`和`node_cache`目录，并且在`node_global`目录下创建`node_modules`目录。\\r\\n\\r\\n```bash\\r\\n 进入 E:/enviroments/nodejs/ 路径下\\r\\nmkdir -p node_global/node_modules node_cache\\r\\n```\\r\\n\\r\\n 2. 设置权限\\r\\n\\r\"},{\"url\":\"/web开发/后端/Nodejs/模块化规范演进\",\"frontmatter\":{\"date\":\"2025-04-19 22:02:31\",\"title\":\"模块化规范演进\",\"permalink\":\"/pages/d20f11\",\"categories\":[\"后端\"],\"tags\":[\"Nodejs\"],\"coverImg\":\"/screenshots/Nodejs/JS模块化规范演进.png\",\"top\":true,\"sticky\":1,\"description\":\"简明扼要的概述了 JS 模块化规范演进的整个历史\"},\"author\":{\"name\":\"程序员皮蛋鸽鸽\",\"link\":\"https://github.com/ZhouYu2156\"},\"title\":\"模块化规范演进\",\"date\":\"2025-04-19 22:02:31\",\"excerpt\":\"\",\"capture\":\"JS 模块化规范演进历史\\r\\n\\r\\n 1. 原始的 JS 模块化\\r\\n\\r\\n每个人编写的`模块`通过 `script`标签引入到`页面`中，然后就可以使用`模块`中的内容了。\\r\\n\\r\\n 2. CommonJS 模块化规范\\r\\n\\r\\n随着 `nodejs` 的诞生，为了解决在 `nodejs` 中的模块化问题，社区自发形成了很多的模块化方案，其中 `CommonJS` 模块化规范得到了时间的检验，并最终确定为主流的模块化规范，这是一套社区的模块化规范，使用 `commonjs` 规范编写的模块并不能直接在浏览器中运行。后来出现了`browserify`，`webpack` 等编译、打包工具，使得 `CommonJS` 模块化规范编写的代码经过编译、打包后也可以用于浏览器中运行。\\r\\n\\r\\n::: code-group\\r\\n\\r\\n```js [utils.js]\\r\\n// 1. 使用 exports 导出模块\\r\\nex\"},{\"url\":\"/web开发/后端/Cpp/\",\"frontmatter\":{\"date\":\"2025-04-19 15:24:14\",\"title\":\"C++语言快速入门\",\"categories\":[\"后端\"],\"tags\":[\"C++\"],\"description\":\"C++是一种静态类型的中级语言，综合了高级语言和低级语言的特点\",\"coverImg\":\"/banner/8.webp\",\"permalink\":\"/pages/2aeaba\"},\"author\":{\"name\":\"程序员皮蛋鸽鸽\",\"link\":\"https://github.com/ZhouYu2156\"},\"title\":\"C++语言快速入门\",\"date\":\"2025-04-19 15:24:14\",\"excerpt\":\"\",\"capture\":\"C++语言快速入门\\n 安装 `C++` 编译环境\\n```bash\\n $ sudo subscription-manager repos --enable codeready-builder-for-rhel-8-x86_64-rpms\\n$ sudo dnf install -y gcc gcc-c++ make\\n 或者安装完整的开发工具组（包含更多工具如gdb、git等）\\n$ sudo dnf groupinstall -y \\\"Development Tools\\\"\\n 检查安装\\n$ gcc --version\\n$ g++ --version\\n$ make --version\\n```\\n 第一个 `C++` 程序\\n```c++\\n// main.cpp\\ninclude &lt;iostream\\nusing namespace std;\\nint main()\\n{\\n    cout &lt;&lt; \"},{\"url\":\"/web开发/后端/Lua/\",\"frontmatter\":{\"date\":\"2025-04-19 07:24:14\",\"title\":\"Lua语言快速入门\",\"categories\":[\"后端\"],\"tags\":[\"Lua\"],\"description\":\"Lua 是一款轻量级、高效灵活、跨平台的多范式编程语言\",\"coverImg\":\"/banner/1.webp\",\"permalink\":\"/pages/e7b99e\"},\"author\":{\"name\":\"程序员皮蛋鸽鸽\",\"link\":\"https://github.com/ZhouYu2156\"},\"title\":\"Lua语言快速入门\",\"date\":\"2025-04-19 07:24:14\",\"excerpt\":\"\",\"capture\":\"Lua语言快速入门\\n 环境安装\\n- 了解更多，请参考：菜鸟教程-Lua 环境安装\\n- Linux 系统(CentOS)\\n```bash\\n$ sudo yum install -y epel-release\\n$ sudo yum install -y lua\\n```\\n 快速体验\\n 交互式\\n```bash\\n$ man lua                  查看 lua 命令行帮助说明\\n$ lua -v                   查看版本信息\\n$ lua -i                   进入交互模式\\n\\n```\\n 脚本式编程\\n- 创建 `*.lua` 文件\\n```lua\\n!/usr/local/bin/lua\\nprint(\\\"Hello world!\\\")\\n```\\n- 赋予可执行权限\\n```bash\\n$ chmod 700 hello.lua\\n```\\n- 执行脚本\\n```bas\"},{\"url\":\"/web开发/运维/Linux/\",\"frontmatter\":{\"date\":\"2025-04-19 04:15:01\",\"title\":\"Linux基础知识\",\"permalink\":\"/pages/92e12e\",\"categories\":[\"运维\"],\"tags\":[\"Linux\"],\"coverImg\":\"/banner/6.webp\",\"description\":\"介绍Linux的基本使用\"},\"author\":{\"name\":\"程序员皮蛋鸽鸽\",\"link\":\"https://github.com/ZhouYu2156\"},\"title\":\"Linux基础知识\",\"date\":\"2025-04-19 04:15:01\",\"excerpt\":\"\",\"capture\":\"Linux基础知识\"}],\"groupPostsByYear\":{\"2025 \":[{\"url\":\"/web开发/开发者工具/VSCode/从零配置Linux与Windows互通的开发环境\",\"frontmatter\":{\"date\":\"2025-04-19 23:19:49\",\"title\":\"从零配置Linux与Windows互通的开发环境\",\"permalink\":\"/pages/e47200\",\"categories\":[\"web开发\",\"开发者工具\",\"VSCode\"],\"coverImg\":\"/screenshots/VSCode/搭建linux开发环境.png\",\"top\":true,\"sticky\":3,\"description\":\"从零打造 Linux 和 Windows 互通的开发环境\"},\"author\":{\"name\":\"程序员皮蛋鸽鸽\",\"link\":\"https://github.com/ZhouYu2156\"},\"title\":\"从零配置Linux与Windows互通的开发环境\",\"date\":\"2025-04-19 23:19:49\",\"excerpt\":\"\",\"capture\":\"从零配置 Linux 与 Windows 互通的开发环境\\n以下配置基于 `Red Hat 8`（红帽8）的 Linux 最基础（无界面）系统，不同的 Linux 发行版会有一些区别，请注意自己系统的是否符合该以上条件。\\n 前置条件\\n\\n```bash\\n 关闭防火墙\\n$ systemctl stop firewalld --now     立即生效\\n$ systemctl status firewalld\\n$ systemctl disable firewalld        永久禁用\\n 关闭 selinux 安全策略\\n$ setenforce 0       本次生效\\n$ getenforce         验证\\n$ sed -i 's/SELINUX=enforcing/SELINUX=disabled/' /etc/selinux/config     改写配置文件，永久关闭\\n```\"},{\"url\":\"/web开发/后端/Python/支付宝沙箱支付教程\",\"frontmatter\":{\"date\":\"2025-04-19 22:58:03\",\"title\":\"支付宝沙箱支付教程\",\"permalink\":\"/pages/4f6a36\",\"categories\":[\"后端\"],\"tags\":[\"Python\",\"Flask\"],\"coverImg\":\"/screenshots/支付宝沙箱支付详细使用教程/支付宝教程封面.png\",\"top\":true,\"sticky\":2,\"description\":\"详细介绍了在Python Web开发中集成支付宝沙箱支付的完整流程\"},\"author\":{\"name\":\"程序员皮蛋鸽鸽\",\"link\":\"https://github.com/ZhouYu2156\"},\"title\":\"支付宝沙箱支付教程\",\"date\":\"2025-04-19 22:58:03\",\"excerpt\":\"\",\"capture\":\"支付宝沙箱支付详细使用教程\\n详细介绍支付宝沙箱支付的全流程配置最新教程，通俗易懂，图文并茂，手把手教你一步步实现完整沙箱支付功能。亲测可用，文章撰写非常用心，包你学会！\\n&lt;!--@include: @/public/snippets/preface.md--\\n 一、前言\\n由于支付宝官方对Java等语言的文档说明支持较好，在Python方面相对较弱，而且依赖包还安装不了等Bug，所以接下来我将分享《在Python Web开发中如何集成支付宝沙箱支付》的详细教程，如果这篇文章有帮助到你，请记得关注我的公众号，我会定期分享实用的技术教程。如果没有帮到你，也可以留个免费的关注，以后或许会有你感兴趣的教程，而且文章质量都超高哦！\\n在个人平常（或准备后续对接支付宝正式支付环境）的项目中，使用沙箱支付来测试支付功能显得很有必要；如果是在校大学生的话，在你的项目中集成支付宝的沙箱支付，也能让你的项目\"},{\"url\":\"/web开发/后端/桌面应用开发/\",\"frontmatter\":{\"date\":\"2025-04-19 22:52:13\",\"title\":\"全网最新最全的 electron 项目环境搭建方式与踩坑经验分享\",\"head\":[[\"meta\",{\"name\":\"description\",\"content\":\"全网最全最新 electron 项目环境搭建方式与踩坑经验分享，帮你避坑，少走弯路，节省时间，还等什么，快来参考一下我的 electron 环境搭建指南！\"},{\"name\":\"keywords\",\"content\":\"electron 项目环境搭建 踩坑经验分享\"}]],\"footer\":false,\"permalink\":\"/pages/75a1df\",\"categories\":[\"后端\"],\"tags\":[\"桌面应用开发\"],\"coverImg\":\"/screenshots/Nodejs/Electron安装踩坑经验总结.png\",\"top\":true,\"sticky\":5,\"description\":\"全网最全最新 electron 项目环境搭建方式与踩坑经验分享\"},\"author\":{\"name\":\"程序员皮蛋鸽鸽\",\"link\":\"https://github.com/ZhouYu2156\"},\"title\":\"全网最新最全的 electron 项目环境搭建方式与踩坑经验分享\",\"date\":\"2025-04-19 22:52:13\",\"excerpt\":\"\",\"capture\":\"&lt;!--@include: @/public/snippets/preface.md--\\r\\n\\r\\n&gt; 本文项目搭建演示的`nodejs`版本如下：\\r\\n\\r\\n```bash\\r\\n$ node -v\\r\\n v22.14.0\\r\\n```\\r\\n\\r\\n 一、官方文档手动搭建\\r\\n\\r\\n文档地址：快速入门 | Electron，按照文档步骤操作即可，项目只包含了`electron`依赖，仅仅只是一个`hello world`展示。\\r\\n\\r\\n&gt; ⚠️ 注意：失败！我设置了代理（网络问题）和切换镜像源（淘宝）等操作都没用。截图如下：\\r\\n\\r\\n\\r\\n\\r\\n 二、官方脚手架方式创建\\r\\n\\r\\n- 创建项目命令如下：\\r\\n\\r\\n```bash\\r\\n$ npm init electron-app@latest my-app -- --template=vite  my-app:项目名(自定义)\\r\\n 或\\r\\n$ npm create \"},{\"url\":\"/web开发/后端/Nodejs/\",\"frontmatter\":{\"date\":\"2025-04-19 22:04:01\",\"layout\":\"doc\",\"title\":\"Nodejs 安装教程\",\"navbar\":true,\"sidebar\":true,\"aside\":true,\"footer\":false,\"pageClass\":null,\"head\":[[\"meta\",{\"name\":\"description\",\"content\":\"Nodejs 详细安装教程附带配置\"}],[\"meta\",{\"name\":\"keywords\",\"content\":\"保姆级Nodejs安装和配置教程\"}]],\"permalink\":\"/pages/b609ed\",\"categories\":[\"后端\"],\"tags\":[\"Nodejs\"],\"coverImg\":\"/screenshots/Nodejs/nodejs官网.png\",\"top\":true,\"sticky\":4,\"description\":\"windows版安装和配置Nodejs保姆级详细教程\"},\"author\":{\"name\":\"程序员皮蛋鸽鸽\",\"link\":\"https://github.com/ZhouYu2156\"},\"title\":\"Nodejs 安装教程\",\"date\":\"2025-04-19 22:04:01\",\"excerpt\":\"\",\"capture\":\"Nodejs 安装教程\\r\\n\\r\\n 一、安装 `Nodejs`\\r\\n\\r\\n::: info 访问`Nodejs`官网\\r\\n点击前往：Nodejs 官网\\r\\n\\r\\n一直点击下一步安装完即可（可以选择自行选择安装路径）。\\r\\n:::\\r\\n\\r\\n\\r\\n\\r\\n- 安装完成后，打开`cmd`，输入`node -v`，如果显示版本号，则安装成功。\\r\\n\\r\\n```bash\\r\\n$ node -v\\r\\n$ npm -v\\r\\n```\\r\\n\\r\\n 二、配置\\r\\n\\r\\n\\r\\n\\r\\n 1. 创建目录\\r\\n\\r\\n创建`node_global`和`node_cache`目录，并且在`node_global`目录下创建`node_modules`目录。\\r\\n\\r\\n```bash\\r\\n 进入 E:/enviroments/nodejs/ 路径下\\r\\nmkdir -p node_global/node_modules node_cache\\r\\n```\\r\\n\\r\\n 2. 设置权限\\r\\n\\r\"},{\"url\":\"/web开发/后端/Nodejs/模块化规范演进\",\"frontmatter\":{\"date\":\"2025-04-19 22:02:31\",\"title\":\"模块化规范演进\",\"permalink\":\"/pages/d20f11\",\"categories\":[\"后端\"],\"tags\":[\"Nodejs\"],\"coverImg\":\"/screenshots/Nodejs/JS模块化规范演进.png\",\"top\":true,\"sticky\":1,\"description\":\"简明扼要的概述了 JS 模块化规范演进的整个历史\"},\"author\":{\"name\":\"程序员皮蛋鸽鸽\",\"link\":\"https://github.com/ZhouYu2156\"},\"title\":\"模块化规范演进\",\"date\":\"2025-04-19 22:02:31\",\"excerpt\":\"\",\"capture\":\"JS 模块化规范演进历史\\r\\n\\r\\n 1. 原始的 JS 模块化\\r\\n\\r\\n每个人编写的`模块`通过 `script`标签引入到`页面`中，然后就可以使用`模块`中的内容了。\\r\\n\\r\\n 2. CommonJS 模块化规范\\r\\n\\r\\n随着 `nodejs` 的诞生，为了解决在 `nodejs` 中的模块化问题，社区自发形成了很多的模块化方案，其中 `CommonJS` 模块化规范得到了时间的检验，并最终确定为主流的模块化规范，这是一套社区的模块化规范，使用 `commonjs` 规范编写的模块并不能直接在浏览器中运行。后来出现了`browserify`，`webpack` 等编译、打包工具，使得 `CommonJS` 模块化规范编写的代码经过编译、打包后也可以用于浏览器中运行。\\r\\n\\r\\n::: code-group\\r\\n\\r\\n```js [utils.js]\\r\\n// 1. 使用 exports 导出模块\\r\\nex\"},{\"url\":\"/web开发/后端/Cpp/\",\"frontmatter\":{\"date\":\"2025-04-19 15:24:14\",\"title\":\"C++语言快速入门\",\"categories\":[\"后端\"],\"tags\":[\"C++\"],\"description\":\"C++是一种静态类型的中级语言，综合了高级语言和低级语言的特点\",\"coverImg\":\"/banner/8.webp\",\"permalink\":\"/pages/2aeaba\"},\"author\":{\"name\":\"程序员皮蛋鸽鸽\",\"link\":\"https://github.com/ZhouYu2156\"},\"title\":\"C++语言快速入门\",\"date\":\"2025-04-19 15:24:14\",\"excerpt\":\"\",\"capture\":\"C++语言快速入门\\n 安装 `C++` 编译环境\\n```bash\\n $ sudo subscription-manager repos --enable codeready-builder-for-rhel-8-x86_64-rpms\\n$ sudo dnf install -y gcc gcc-c++ make\\n 或者安装完整的开发工具组（包含更多工具如gdb、git等）\\n$ sudo dnf groupinstall -y \\\"Development Tools\\\"\\n 检查安装\\n$ gcc --version\\n$ g++ --version\\n$ make --version\\n```\\n 第一个 `C++` 程序\\n```c++\\n// main.cpp\\ninclude &lt;iostream\\nusing namespace std;\\nint main()\\n{\\n    cout &lt;&lt; \"},{\"url\":\"/web开发/后端/Lua/\",\"frontmatter\":{\"date\":\"2025-04-19 07:24:14\",\"title\":\"Lua语言快速入门\",\"categories\":[\"后端\"],\"tags\":[\"Lua\"],\"description\":\"Lua 是一款轻量级、高效灵活、跨平台的多范式编程语言\",\"coverImg\":\"/banner/1.webp\",\"permalink\":\"/pages/e7b99e\"},\"author\":{\"name\":\"程序员皮蛋鸽鸽\",\"link\":\"https://github.com/ZhouYu2156\"},\"title\":\"Lua语言快速入门\",\"date\":\"2025-04-19 07:24:14\",\"excerpt\":\"\",\"capture\":\"Lua语言快速入门\\n 环境安装\\n- 了解更多，请参考：菜鸟教程-Lua 环境安装\\n- Linux 系统(CentOS)\\n```bash\\n$ sudo yum install -y epel-release\\n$ sudo yum install -y lua\\n```\\n 快速体验\\n 交互式\\n```bash\\n$ man lua                  查看 lua 命令行帮助说明\\n$ lua -v                   查看版本信息\\n$ lua -i                   进入交互模式\\n\\n```\\n 脚本式编程\\n- 创建 `*.lua` 文件\\n```lua\\n!/usr/local/bin/lua\\nprint(\\\"Hello world!\\\")\\n```\\n- 赋予可执行权限\\n```bash\\n$ chmod 700 hello.lua\\n```\\n- 执行脚本\\n```bas\"},{\"url\":\"/web开发/运维/Linux/\",\"frontmatter\":{\"date\":\"2025-04-19 04:15:01\",\"title\":\"Linux基础知识\",\"permalink\":\"/pages/92e12e\",\"categories\":[\"运维\"],\"tags\":[\"Linux\"],\"coverImg\":\"/banner/6.webp\",\"description\":\"介绍Linux的基本使用\"},\"author\":{\"name\":\"程序员皮蛋鸽鸽\",\"link\":\"https://github.com/ZhouYu2156\"},\"title\":\"Linux基础知识\",\"date\":\"2025-04-19 04:15:01\",\"excerpt\":\"\",\"capture\":\"Linux基础知识\"}]},\"groupPostsByYearMonth\":{\"2025 \":{\"04\":[{\"url\":\"/web开发/开发者工具/VSCode/从零配置Linux与Windows互通的开发环境\",\"frontmatter\":{\"date\":\"2025-04-19 23:19:49\",\"title\":\"从零配置Linux与Windows互通的开发环境\",\"permalink\":\"/pages/e47200\",\"categories\":[\"web开发\",\"开发者工具\",\"VSCode\"],\"coverImg\":\"/screenshots/VSCode/搭建linux开发环境.png\",\"top\":true,\"sticky\":3,\"description\":\"从零打造 Linux 和 Windows 互通的开发环境\"},\"author\":{\"name\":\"程序员皮蛋鸽鸽\",\"link\":\"https://github.com/ZhouYu2156\"},\"title\":\"从零配置Linux与Windows互通的开发环境\",\"date\":\"2025-04-19 23:19:49\",\"excerpt\":\"\",\"capture\":\"从零配置 Linux 与 Windows 互通的开发环境\\n以下配置基于 `Red Hat 8`（红帽8）的 Linux 最基础（无界面）系统，不同的 Linux 发行版会有一些区别，请注意自己系统的是否符合该以上条件。\\n 前置条件\\n\\n```bash\\n 关闭防火墙\\n$ systemctl stop firewalld --now     立即生效\\n$ systemctl status firewalld\\n$ systemctl disable firewalld        永久禁用\\n 关闭 selinux 安全策略\\n$ setenforce 0       本次生效\\n$ getenforce         验证\\n$ sed -i 's/SELINUX=enforcing/SELINUX=disabled/' /etc/selinux/config     改写配置文件，永久关闭\\n```\"},{\"url\":\"/web开发/后端/Python/支付宝沙箱支付教程\",\"frontmatter\":{\"date\":\"2025-04-19 22:58:03\",\"title\":\"支付宝沙箱支付教程\",\"permalink\":\"/pages/4f6a36\",\"categories\":[\"后端\"],\"tags\":[\"Python\",\"Flask\"],\"coverImg\":\"/screenshots/支付宝沙箱支付详细使用教程/支付宝教程封面.png\",\"top\":true,\"sticky\":2,\"description\":\"详细介绍了在Python Web开发中集成支付宝沙箱支付的完整流程\"},\"author\":{\"name\":\"程序员皮蛋鸽鸽\",\"link\":\"https://github.com/ZhouYu2156\"},\"title\":\"支付宝沙箱支付教程\",\"date\":\"2025-04-19 22:58:03\",\"excerpt\":\"\",\"capture\":\"支付宝沙箱支付详细使用教程\\n详细介绍支付宝沙箱支付的全流程配置最新教程，通俗易懂，图文并茂，手把手教你一步步实现完整沙箱支付功能。亲测可用，文章撰写非常用心，包你学会！\\n&lt;!--@include: @/public/snippets/preface.md--\\n 一、前言\\n由于支付宝官方对Java等语言的文档说明支持较好，在Python方面相对较弱，而且依赖包还安装不了等Bug，所以接下来我将分享《在Python Web开发中如何集成支付宝沙箱支付》的详细教程，如果这篇文章有帮助到你，请记得关注我的公众号，我会定期分享实用的技术教程。如果没有帮到你，也可以留个免费的关注，以后或许会有你感兴趣的教程，而且文章质量都超高哦！\\n在个人平常（或准备后续对接支付宝正式支付环境）的项目中，使用沙箱支付来测试支付功能显得很有必要；如果是在校大学生的话，在你的项目中集成支付宝的沙箱支付，也能让你的项目\"},{\"url\":\"/web开发/后端/桌面应用开发/\",\"frontmatter\":{\"date\":\"2025-04-19 22:52:13\",\"title\":\"全网最新最全的 electron 项目环境搭建方式与踩坑经验分享\",\"head\":[[\"meta\",{\"name\":\"description\",\"content\":\"全网最全最新 electron 项目环境搭建方式与踩坑经验分享，帮你避坑，少走弯路，节省时间，还等什么，快来参考一下我的 electron 环境搭建指南！\"},{\"name\":\"keywords\",\"content\":\"electron 项目环境搭建 踩坑经验分享\"}]],\"footer\":false,\"permalink\":\"/pages/75a1df\",\"categories\":[\"后端\"],\"tags\":[\"桌面应用开发\"],\"coverImg\":\"/screenshots/Nodejs/Electron安装踩坑经验总结.png\",\"top\":true,\"sticky\":5,\"description\":\"全网最全最新 electron 项目环境搭建方式与踩坑经验分享\"},\"author\":{\"name\":\"程序员皮蛋鸽鸽\",\"link\":\"https://github.com/ZhouYu2156\"},\"title\":\"全网最新最全的 electron 项目环境搭建方式与踩坑经验分享\",\"date\":\"2025-04-19 22:52:13\",\"excerpt\":\"\",\"capture\":\"&lt;!--@include: @/public/snippets/preface.md--\\r\\n\\r\\n&gt; 本文项目搭建演示的`nodejs`版本如下：\\r\\n\\r\\n```bash\\r\\n$ node -v\\r\\n v22.14.0\\r\\n```\\r\\n\\r\\n 一、官方文档手动搭建\\r\\n\\r\\n文档地址：快速入门 | Electron，按照文档步骤操作即可，项目只包含了`electron`依赖，仅仅只是一个`hello world`展示。\\r\\n\\r\\n&gt; ⚠️ 注意：失败！我设置了代理（网络问题）和切换镜像源（淘宝）等操作都没用。截图如下：\\r\\n\\r\\n\\r\\n\\r\\n 二、官方脚手架方式创建\\r\\n\\r\\n- 创建项目命令如下：\\r\\n\\r\\n```bash\\r\\n$ npm init electron-app@latest my-app -- --template=vite  my-app:项目名(自定义)\\r\\n 或\\r\\n$ npm create \"},{\"url\":\"/web开发/后端/Nodejs/\",\"frontmatter\":{\"date\":\"2025-04-19 22:04:01\",\"layout\":\"doc\",\"title\":\"Nodejs 安装教程\",\"navbar\":true,\"sidebar\":true,\"aside\":true,\"footer\":false,\"pageClass\":null,\"head\":[[\"meta\",{\"name\":\"description\",\"content\":\"Nodejs 详细安装教程附带配置\"}],[\"meta\",{\"name\":\"keywords\",\"content\":\"保姆级Nodejs安装和配置教程\"}]],\"permalink\":\"/pages/b609ed\",\"categories\":[\"后端\"],\"tags\":[\"Nodejs\"],\"coverImg\":\"/screenshots/Nodejs/nodejs官网.png\",\"top\":true,\"sticky\":4,\"description\":\"windows版安装和配置Nodejs保姆级详细教程\"},\"author\":{\"name\":\"程序员皮蛋鸽鸽\",\"link\":\"https://github.com/ZhouYu2156\"},\"title\":\"Nodejs 安装教程\",\"date\":\"2025-04-19 22:04:01\",\"excerpt\":\"\",\"capture\":\"Nodejs 安装教程\\r\\n\\r\\n 一、安装 `Nodejs`\\r\\n\\r\\n::: info 访问`Nodejs`官网\\r\\n点击前往：Nodejs 官网\\r\\n\\r\\n一直点击下一步安装完即可（可以选择自行选择安装路径）。\\r\\n:::\\r\\n\\r\\n\\r\\n\\r\\n- 安装完成后，打开`cmd`，输入`node -v`，如果显示版本号，则安装成功。\\r\\n\\r\\n```bash\\r\\n$ node -v\\r\\n$ npm -v\\r\\n```\\r\\n\\r\\n 二、配置\\r\\n\\r\\n\\r\\n\\r\\n 1. 创建目录\\r\\n\\r\\n创建`node_global`和`node_cache`目录，并且在`node_global`目录下创建`node_modules`目录。\\r\\n\\r\\n```bash\\r\\n 进入 E:/enviroments/nodejs/ 路径下\\r\\nmkdir -p node_global/node_modules node_cache\\r\\n```\\r\\n\\r\\n 2. 设置权限\\r\\n\\r\"},{\"url\":\"/web开发/后端/Nodejs/模块化规范演进\",\"frontmatter\":{\"date\":\"2025-04-19 22:02:31\",\"title\":\"模块化规范演进\",\"permalink\":\"/pages/d20f11\",\"categories\":[\"后端\"],\"tags\":[\"Nodejs\"],\"coverImg\":\"/screenshots/Nodejs/JS模块化规范演进.png\",\"top\":true,\"sticky\":1,\"description\":\"简明扼要的概述了 JS 模块化规范演进的整个历史\"},\"author\":{\"name\":\"程序员皮蛋鸽鸽\",\"link\":\"https://github.com/ZhouYu2156\"},\"title\":\"模块化规范演进\",\"date\":\"2025-04-19 22:02:31\",\"excerpt\":\"\",\"capture\":\"JS 模块化规范演进历史\\r\\n\\r\\n 1. 原始的 JS 模块化\\r\\n\\r\\n每个人编写的`模块`通过 `script`标签引入到`页面`中，然后就可以使用`模块`中的内容了。\\r\\n\\r\\n 2. CommonJS 模块化规范\\r\\n\\r\\n随着 `nodejs` 的诞生，为了解决在 `nodejs` 中的模块化问题，社区自发形成了很多的模块化方案，其中 `CommonJS` 模块化规范得到了时间的检验，并最终确定为主流的模块化规范，这是一套社区的模块化规范，使用 `commonjs` 规范编写的模块并不能直接在浏览器中运行。后来出现了`browserify`，`webpack` 等编译、打包工具，使得 `CommonJS` 模块化规范编写的代码经过编译、打包后也可以用于浏览器中运行。\\r\\n\\r\\n::: code-group\\r\\n\\r\\n```js [utils.js]\\r\\n// 1. 使用 exports 导出模块\\r\\nex\"},{\"url\":\"/web开发/后端/Cpp/\",\"frontmatter\":{\"date\":\"2025-04-19 15:24:14\",\"title\":\"C++语言快速入门\",\"categories\":[\"后端\"],\"tags\":[\"C++\"],\"description\":\"C++是一种静态类型的中级语言，综合了高级语言和低级语言的特点\",\"coverImg\":\"/banner/8.webp\",\"permalink\":\"/pages/2aeaba\"},\"author\":{\"name\":\"程序员皮蛋鸽鸽\",\"link\":\"https://github.com/ZhouYu2156\"},\"title\":\"C++语言快速入门\",\"date\":\"2025-04-19 15:24:14\",\"excerpt\":\"\",\"capture\":\"C++语言快速入门\\n 安装 `C++` 编译环境\\n```bash\\n $ sudo subscription-manager repos --enable codeready-builder-for-rhel-8-x86_64-rpms\\n$ sudo dnf install -y gcc gcc-c++ make\\n 或者安装完整的开发工具组（包含更多工具如gdb、git等）\\n$ sudo dnf groupinstall -y \\\"Development Tools\\\"\\n 检查安装\\n$ gcc --version\\n$ g++ --version\\n$ make --version\\n```\\n 第一个 `C++` 程序\\n```c++\\n// main.cpp\\ninclude &lt;iostream\\nusing namespace std;\\nint main()\\n{\\n    cout &lt;&lt; \"},{\"url\":\"/web开发/后端/Lua/\",\"frontmatter\":{\"date\":\"2025-04-19 07:24:14\",\"title\":\"Lua语言快速入门\",\"categories\":[\"后端\"],\"tags\":[\"Lua\"],\"description\":\"Lua 是一款轻量级、高效灵活、跨平台的多范式编程语言\",\"coverImg\":\"/banner/1.webp\",\"permalink\":\"/pages/e7b99e\"},\"author\":{\"name\":\"程序员皮蛋鸽鸽\",\"link\":\"https://github.com/ZhouYu2156\"},\"title\":\"Lua语言快速入门\",\"date\":\"2025-04-19 07:24:14\",\"excerpt\":\"\",\"capture\":\"Lua语言快速入门\\n 环境安装\\n- 了解更多，请参考：菜鸟教程-Lua 环境安装\\n- Linux 系统(CentOS)\\n```bash\\n$ sudo yum install -y epel-release\\n$ sudo yum install -y lua\\n```\\n 快速体验\\n 交互式\\n```bash\\n$ man lua                  查看 lua 命令行帮助说明\\n$ lua -v                   查看版本信息\\n$ lua -i                   进入交互模式\\n\\n```\\n 脚本式编程\\n- 创建 `*.lua` 文件\\n```lua\\n!/usr/local/bin/lua\\nprint(\\\"Hello world!\\\")\\n```\\n- 赋予可执行权限\\n```bash\\n$ chmod 700 hello.lua\\n```\\n- 执行脚本\\n```bas\"},{\"url\":\"/web开发/运维/Linux/\",\"frontmatter\":{\"date\":\"2025-04-19 04:15:01\",\"title\":\"Linux基础知识\",\"permalink\":\"/pages/92e12e\",\"categories\":[\"运维\"],\"tags\":[\"Linux\"],\"coverImg\":\"/banner/6.webp\",\"description\":\"介绍Linux的基本使用\"},\"author\":{\"name\":\"程序员皮蛋鸽鸽\",\"link\":\"https://github.com/ZhouYu2156\"},\"title\":\"Linux基础知识\",\"date\":\"2025-04-19 04:15:01\",\"excerpt\":\"\",\"capture\":\"Linux基础知识\"}]}},\"groupPosts\":{\"categories\":{\"后端\":[{\"url\":\"/web开发/后端/Nodejs/模块化规范演进\",\"frontmatter\":{\"date\":\"2025-04-19 22:02:31\",\"title\":\"模块化规范演进\",\"permalink\":\"/pages/d20f11\",\"categories\":[\"后端\"],\"tags\":[\"Nodejs\"],\"coverImg\":\"/screenshots/Nodejs/JS模块化规范演进.png\",\"top\":true,\"sticky\":1,\"description\":\"简明扼要的概述了 JS 模块化规范演进的整个历史\"},\"author\":{\"name\":\"程序员皮蛋鸽鸽\",\"link\":\"https://github.com/ZhouYu2156\"},\"title\":\"模块化规范演进\",\"date\":\"2025-04-19 22:02:31\",\"excerpt\":\"\",\"capture\":\"JS 模块化规范演进历史\\r\\n\\r\\n 1. 原始的 JS 模块化\\r\\n\\r\\n每个人编写的`模块`通过 `script`标签引入到`页面`中，然后就可以使用`模块`中的内容了。\\r\\n\\r\\n 2. CommonJS 模块化规范\\r\\n\\r\\n随着 `nodejs` 的诞生，为了解决在 `nodejs` 中的模块化问题，社区自发形成了很多的模块化方案，其中 `CommonJS` 模块化规范得到了时间的检验，并最终确定为主流的模块化规范，这是一套社区的模块化规范，使用 `commonjs` 规范编写的模块并不能直接在浏览器中运行。后来出现了`browserify`，`webpack` 等编译、打包工具，使得 `CommonJS` 模块化规范编写的代码经过编译、打包后也可以用于浏览器中运行。\\r\\n\\r\\n::: code-group\\r\\n\\r\\n```js [utils.js]\\r\\n// 1. 使用 exports 导出模块\\r\\nex\"},{\"url\":\"/web开发/后端/Python/支付宝沙箱支付教程\",\"frontmatter\":{\"date\":\"2025-04-19 22:58:03\",\"title\":\"支付宝沙箱支付教程\",\"permalink\":\"/pages/4f6a36\",\"categories\":[\"后端\"],\"tags\":[\"Python\",\"Flask\"],\"coverImg\":\"/screenshots/支付宝沙箱支付详细使用教程/支付宝教程封面.png\",\"top\":true,\"sticky\":2,\"description\":\"详细介绍了在Python Web开发中集成支付宝沙箱支付的完整流程\"},\"author\":{\"name\":\"程序员皮蛋鸽鸽\",\"link\":\"https://github.com/ZhouYu2156\"},\"title\":\"支付宝沙箱支付教程\",\"date\":\"2025-04-19 22:58:03\",\"excerpt\":\"\",\"capture\":\"支付宝沙箱支付详细使用教程\\n详细介绍支付宝沙箱支付的全流程配置最新教程，通俗易懂，图文并茂，手把手教你一步步实现完整沙箱支付功能。亲测可用，文章撰写非常用心，包你学会！\\n&lt;!--@include: @/public/snippets/preface.md--\\n 一、前言\\n由于支付宝官方对Java等语言的文档说明支持较好，在Python方面相对较弱，而且依赖包还安装不了等Bug，所以接下来我将分享《在Python Web开发中如何集成支付宝沙箱支付》的详细教程，如果这篇文章有帮助到你，请记得关注我的公众号，我会定期分享实用的技术教程。如果没有帮到你，也可以留个免费的关注，以后或许会有你感兴趣的教程，而且文章质量都超高哦！\\n在个人平常（或准备后续对接支付宝正式支付环境）的项目中，使用沙箱支付来测试支付功能显得很有必要；如果是在校大学生的话，在你的项目中集成支付宝的沙箱支付，也能让你的项目\"},{\"url\":\"/web开发/后端/Nodejs/\",\"frontmatter\":{\"date\":\"2025-04-19 22:04:01\",\"layout\":\"doc\",\"title\":\"Nodejs 安装教程\",\"navbar\":true,\"sidebar\":true,\"aside\":true,\"footer\":false,\"pageClass\":null,\"head\":[[\"meta\",{\"name\":\"description\",\"content\":\"Nodejs 详细安装教程附带配置\"}],[\"meta\",{\"name\":\"keywords\",\"content\":\"保姆级Nodejs安装和配置教程\"}]],\"permalink\":\"/pages/b609ed\",\"categories\":[\"后端\"],\"tags\":[\"Nodejs\"],\"coverImg\":\"/screenshots/Nodejs/nodejs官网.png\",\"top\":true,\"sticky\":4,\"description\":\"windows版安装和配置Nodejs保姆级详细教程\"},\"author\":{\"name\":\"程序员皮蛋鸽鸽\",\"link\":\"https://github.com/ZhouYu2156\"},\"title\":\"Nodejs 安装教程\",\"date\":\"2025-04-19 22:04:01\",\"excerpt\":\"\",\"capture\":\"Nodejs 安装教程\\r\\n\\r\\n 一、安装 `Nodejs`\\r\\n\\r\\n::: info 访问`Nodejs`官网\\r\\n点击前往：Nodejs 官网\\r\\n\\r\\n一直点击下一步安装完即可（可以选择自行选择安装路径）。\\r\\n:::\\r\\n\\r\\n\\r\\n\\r\\n- 安装完成后，打开`cmd`，输入`node -v`，如果显示版本号，则安装成功。\\r\\n\\r\\n```bash\\r\\n$ node -v\\r\\n$ npm -v\\r\\n```\\r\\n\\r\\n 二、配置\\r\\n\\r\\n\\r\\n\\r\\n 1. 创建目录\\r\\n\\r\\n创建`node_global`和`node_cache`目录，并且在`node_global`目录下创建`node_modules`目录。\\r\\n\\r\\n```bash\\r\\n 进入 E:/enviroments/nodejs/ 路径下\\r\\nmkdir -p node_global/node_modules node_cache\\r\\n```\\r\\n\\r\\n 2. 设置权限\\r\\n\\r\"},{\"url\":\"/web开发/后端/桌面应用开发/\",\"frontmatter\":{\"date\":\"2025-04-19 22:52:13\",\"title\":\"全网最新最全的 electron 项目环境搭建方式与踩坑经验分享\",\"head\":[[\"meta\",{\"name\":\"description\",\"content\":\"全网最全最新 electron 项目环境搭建方式与踩坑经验分享，帮你避坑，少走弯路，节省时间，还等什么，快来参考一下我的 electron 环境搭建指南！\"},{\"name\":\"keywords\",\"content\":\"electron 项目环境搭建 踩坑经验分享\"}]],\"footer\":false,\"permalink\":\"/pages/75a1df\",\"categories\":[\"后端\"],\"tags\":[\"桌面应用开发\"],\"coverImg\":\"/screenshots/Nodejs/Electron安装踩坑经验总结.png\",\"top\":true,\"sticky\":5,\"description\":\"全网最全最新 electron 项目环境搭建方式与踩坑经验分享\"},\"author\":{\"name\":\"程序员皮蛋鸽鸽\",\"link\":\"https://github.com/ZhouYu2156\"},\"title\":\"全网最新最全的 electron 项目环境搭建方式与踩坑经验分享\",\"date\":\"2025-04-19 22:52:13\",\"excerpt\":\"\",\"capture\":\"&lt;!--@include: @/public/snippets/preface.md--\\r\\n\\r\\n&gt; 本文项目搭建演示的`nodejs`版本如下：\\r\\n\\r\\n```bash\\r\\n$ node -v\\r\\n v22.14.0\\r\\n```\\r\\n\\r\\n 一、官方文档手动搭建\\r\\n\\r\\n文档地址：快速入门 | Electron，按照文档步骤操作即可，项目只包含了`electron`依赖，仅仅只是一个`hello world`展示。\\r\\n\\r\\n&gt; ⚠️ 注意：失败！我设置了代理（网络问题）和切换镜像源（淘宝）等操作都没用。截图如下：\\r\\n\\r\\n\\r\\n\\r\\n 二、官方脚手架方式创建\\r\\n\\r\\n- 创建项目命令如下：\\r\\n\\r\\n```bash\\r\\n$ npm init electron-app@latest my-app -- --template=vite  my-app:项目名(自定义)\\r\\n 或\\r\\n$ npm create \"},{\"url\":\"/web开发/后端/Cpp/\",\"frontmatter\":{\"date\":\"2025-04-19 15:24:14\",\"title\":\"C++语言快速入门\",\"categories\":[\"后端\"],\"tags\":[\"C++\"],\"description\":\"C++是一种静态类型的中级语言，综合了高级语言和低级语言的特点\",\"coverImg\":\"/banner/8.webp\",\"permalink\":\"/pages/2aeaba\"},\"author\":{\"name\":\"程序员皮蛋鸽鸽\",\"link\":\"https://github.com/ZhouYu2156\"},\"title\":\"C++语言快速入门\",\"date\":\"2025-04-19 15:24:14\",\"excerpt\":\"\",\"capture\":\"C++语言快速入门\\n 安装 `C++` 编译环境\\n```bash\\n $ sudo subscription-manager repos --enable codeready-builder-for-rhel-8-x86_64-rpms\\n$ sudo dnf install -y gcc gcc-c++ make\\n 或者安装完整的开发工具组（包含更多工具如gdb、git等）\\n$ sudo dnf groupinstall -y \\\"Development Tools\\\"\\n 检查安装\\n$ gcc --version\\n$ g++ --version\\n$ make --version\\n```\\n 第一个 `C++` 程序\\n```c++\\n// main.cpp\\ninclude &lt;iostream\\nusing namespace std;\\nint main()\\n{\\n    cout &lt;&lt; \"},{\"url\":\"/web开发/后端/Lua/\",\"frontmatter\":{\"date\":\"2025-04-19 07:24:14\",\"title\":\"Lua语言快速入门\",\"categories\":[\"后端\"],\"tags\":[\"Lua\"],\"description\":\"Lua 是一款轻量级、高效灵活、跨平台的多范式编程语言\",\"coverImg\":\"/banner/1.webp\",\"permalink\":\"/pages/e7b99e\"},\"author\":{\"name\":\"程序员皮蛋鸽鸽\",\"link\":\"https://github.com/ZhouYu2156\"},\"title\":\"Lua语言快速入门\",\"date\":\"2025-04-19 07:24:14\",\"excerpt\":\"\",\"capture\":\"Lua语言快速入门\\n 环境安装\\n- 了解更多，请参考：菜鸟教程-Lua 环境安装\\n- Linux 系统(CentOS)\\n```bash\\n$ sudo yum install -y epel-release\\n$ sudo yum install -y lua\\n```\\n 快速体验\\n 交互式\\n```bash\\n$ man lua                  查看 lua 命令行帮助说明\\n$ lua -v                   查看版本信息\\n$ lua -i                   进入交互模式\\n\\n```\\n 脚本式编程\\n- 创建 `*.lua` 文件\\n```lua\\n!/usr/local/bin/lua\\nprint(\\\"Hello world!\\\")\\n```\\n- 赋予可执行权限\\n```bash\\n$ chmod 700 hello.lua\\n```\\n- 执行脚本\\n```bas\"}],\"web开发\":[{\"url\":\"/web开发/开发者工具/VSCode/从零配置Linux与Windows互通的开发环境\",\"frontmatter\":{\"date\":\"2025-04-19 23:19:49\",\"title\":\"从零配置Linux与Windows互通的开发环境\",\"permalink\":\"/pages/e47200\",\"categories\":[\"web开发\",\"开发者工具\",\"VSCode\"],\"coverImg\":\"/screenshots/VSCode/搭建linux开发环境.png\",\"top\":true,\"sticky\":3,\"description\":\"从零打造 Linux 和 Windows 互通的开发环境\"},\"author\":{\"name\":\"程序员皮蛋鸽鸽\",\"link\":\"https://github.com/ZhouYu2156\"},\"title\":\"从零配置Linux与Windows互通的开发环境\",\"date\":\"2025-04-19 23:19:49\",\"excerpt\":\"\",\"capture\":\"从零配置 Linux 与 Windows 互通的开发环境\\n以下配置基于 `Red Hat 8`（红帽8）的 Linux 最基础（无界面）系统，不同的 Linux 发行版会有一些区别，请注意自己系统的是否符合该以上条件。\\n 前置条件\\n\\n```bash\\n 关闭防火墙\\n$ systemctl stop firewalld --now     立即生效\\n$ systemctl status firewalld\\n$ systemctl disable firewalld        永久禁用\\n 关闭 selinux 安全策略\\n$ setenforce 0       本次生效\\n$ getenforce         验证\\n$ sed -i 's/SELINUX=enforcing/SELINUX=disabled/' /etc/selinux/config     改写配置文件，永久关闭\\n```\"}],\"开发者工具\":[{\"url\":\"/web开发/开发者工具/VSCode/从零配置Linux与Windows互通的开发环境\",\"frontmatter\":{\"date\":\"2025-04-19 23:19:49\",\"title\":\"从零配置Linux与Windows互通的开发环境\",\"permalink\":\"/pages/e47200\",\"categories\":[\"web开发\",\"开发者工具\",\"VSCode\"],\"coverImg\":\"/screenshots/VSCode/搭建linux开发环境.png\",\"top\":true,\"sticky\":3,\"description\":\"从零打造 Linux 和 Windows 互通的开发环境\"},\"author\":{\"name\":\"程序员皮蛋鸽鸽\",\"link\":\"https://github.com/ZhouYu2156\"},\"title\":\"从零配置Linux与Windows互通的开发环境\",\"date\":\"2025-04-19 23:19:49\",\"excerpt\":\"\",\"capture\":\"从零配置 Linux 与 Windows 互通的开发环境\\n以下配置基于 `Red Hat 8`（红帽8）的 Linux 最基础（无界面）系统，不同的 Linux 发行版会有一些区别，请注意自己系统的是否符合该以上条件。\\n 前置条件\\n\\n```bash\\n 关闭防火墙\\n$ systemctl stop firewalld --now     立即生效\\n$ systemctl status firewalld\\n$ systemctl disable firewalld        永久禁用\\n 关闭 selinux 安全策略\\n$ setenforce 0       本次生效\\n$ getenforce         验证\\n$ sed -i 's/SELINUX=enforcing/SELINUX=disabled/' /etc/selinux/config     改写配置文件，永久关闭\\n```\"}],\"VSCode\":[{\"url\":\"/web开发/开发者工具/VSCode/从零配置Linux与Windows互通的开发环境\",\"frontmatter\":{\"date\":\"2025-04-19 23:19:49\",\"title\":\"从零配置Linux与Windows互通的开发环境\",\"permalink\":\"/pages/e47200\",\"categories\":[\"web开发\",\"开发者工具\",\"VSCode\"],\"coverImg\":\"/screenshots/VSCode/搭建linux开发环境.png\",\"top\":true,\"sticky\":3,\"description\":\"从零打造 Linux 和 Windows 互通的开发环境\"},\"author\":{\"name\":\"程序员皮蛋鸽鸽\",\"link\":\"https://github.com/ZhouYu2156\"},\"title\":\"从零配置Linux与Windows互通的开发环境\",\"date\":\"2025-04-19 23:19:49\",\"excerpt\":\"\",\"capture\":\"从零配置 Linux 与 Windows 互通的开发环境\\n以下配置基于 `Red Hat 8`（红帽8）的 Linux 最基础（无界面）系统，不同的 Linux 发行版会有一些区别，请注意自己系统的是否符合该以上条件。\\n 前置条件\\n\\n```bash\\n 关闭防火墙\\n$ systemctl stop firewalld --now     立即生效\\n$ systemctl status firewalld\\n$ systemctl disable firewalld        永久禁用\\n 关闭 selinux 安全策略\\n$ setenforce 0       本次生效\\n$ getenforce         验证\\n$ sed -i 's/SELINUX=enforcing/SELINUX=disabled/' /etc/selinux/config     改写配置文件，永久关闭\\n```\"}],\"运维\":[{\"url\":\"/web开发/运维/Linux/\",\"frontmatter\":{\"date\":\"2025-04-19 04:15:01\",\"title\":\"Linux基础知识\",\"permalink\":\"/pages/92e12e\",\"categories\":[\"运维\"],\"tags\":[\"Linux\"],\"coverImg\":\"/banner/6.webp\",\"description\":\"介绍Linux的基本使用\"},\"author\":{\"name\":\"程序员皮蛋鸽鸽\",\"link\":\"https://github.com/ZhouYu2156\"},\"title\":\"Linux基础知识\",\"date\":\"2025-04-19 04:15:01\",\"excerpt\":\"\",\"capture\":\"Linux基础知识\"}]},\"tags\":{\"Nodejs\":[{\"url\":\"/web开发/后端/Nodejs/模块化规范演进\",\"frontmatter\":{\"date\":\"2025-04-19 22:02:31\",\"title\":\"模块化规范演进\",\"permalink\":\"/pages/d20f11\",\"categories\":[\"后端\"],\"tags\":[\"Nodejs\"],\"coverImg\":\"/screenshots/Nodejs/JS模块化规范演进.png\",\"top\":true,\"sticky\":1,\"description\":\"简明扼要的概述了 JS 模块化规范演进的整个历史\"},\"author\":{\"name\":\"程序员皮蛋鸽鸽\",\"link\":\"https://github.com/ZhouYu2156\"},\"title\":\"模块化规范演进\",\"date\":\"2025-04-19 22:02:31\",\"excerpt\":\"\",\"capture\":\"JS 模块化规范演进历史\\r\\n\\r\\n 1. 原始的 JS 模块化\\r\\n\\r\\n每个人编写的`模块`通过 `script`标签引入到`页面`中，然后就可以使用`模块`中的内容了。\\r\\n\\r\\n 2. CommonJS 模块化规范\\r\\n\\r\\n随着 `nodejs` 的诞生，为了解决在 `nodejs` 中的模块化问题，社区自发形成了很多的模块化方案，其中 `CommonJS` 模块化规范得到了时间的检验，并最终确定为主流的模块化规范，这是一套社区的模块化规范，使用 `commonjs` 规范编写的模块并不能直接在浏览器中运行。后来出现了`browserify`，`webpack` 等编译、打包工具，使得 `CommonJS` 模块化规范编写的代码经过编译、打包后也可以用于浏览器中运行。\\r\\n\\r\\n::: code-group\\r\\n\\r\\n```js [utils.js]\\r\\n// 1. 使用 exports 导出模块\\r\\nex\"},{\"url\":\"/web开发/后端/Nodejs/\",\"frontmatter\":{\"date\":\"2025-04-19 22:04:01\",\"layout\":\"doc\",\"title\":\"Nodejs 安装教程\",\"navbar\":true,\"sidebar\":true,\"aside\":true,\"footer\":false,\"pageClass\":null,\"head\":[[\"meta\",{\"name\":\"description\",\"content\":\"Nodejs 详细安装教程附带配置\"}],[\"meta\",{\"name\":\"keywords\",\"content\":\"保姆级Nodejs安装和配置教程\"}]],\"permalink\":\"/pages/b609ed\",\"categories\":[\"后端\"],\"tags\":[\"Nodejs\"],\"coverImg\":\"/screenshots/Nodejs/nodejs官网.png\",\"top\":true,\"sticky\":4,\"description\":\"windows版安装和配置Nodejs保姆级详细教程\"},\"author\":{\"name\":\"程序员皮蛋鸽鸽\",\"link\":\"https://github.com/ZhouYu2156\"},\"title\":\"Nodejs 安装教程\",\"date\":\"2025-04-19 22:04:01\",\"excerpt\":\"\",\"capture\":\"Nodejs 安装教程\\r\\n\\r\\n 一、安装 `Nodejs`\\r\\n\\r\\n::: info 访问`Nodejs`官网\\r\\n点击前往：Nodejs 官网\\r\\n\\r\\n一直点击下一步安装完即可（可以选择自行选择安装路径）。\\r\\n:::\\r\\n\\r\\n\\r\\n\\r\\n- 安装完成后，打开`cmd`，输入`node -v`，如果显示版本号，则安装成功。\\r\\n\\r\\n```bash\\r\\n$ node -v\\r\\n$ npm -v\\r\\n```\\r\\n\\r\\n 二、配置\\r\\n\\r\\n\\r\\n\\r\\n 1. 创建目录\\r\\n\\r\\n创建`node_global`和`node_cache`目录，并且在`node_global`目录下创建`node_modules`目录。\\r\\n\\r\\n```bash\\r\\n 进入 E:/enviroments/nodejs/ 路径下\\r\\nmkdir -p node_global/node_modules node_cache\\r\\n```\\r\\n\\r\\n 2. 设置权限\\r\\n\\r\"}],\"Python\":[{\"url\":\"/web开发/后端/Python/支付宝沙箱支付教程\",\"frontmatter\":{\"date\":\"2025-04-19 22:58:03\",\"title\":\"支付宝沙箱支付教程\",\"permalink\":\"/pages/4f6a36\",\"categories\":[\"后端\"],\"tags\":[\"Python\",\"Flask\"],\"coverImg\":\"/screenshots/支付宝沙箱支付详细使用教程/支付宝教程封面.png\",\"top\":true,\"sticky\":2,\"description\":\"详细介绍了在Python Web开发中集成支付宝沙箱支付的完整流程\"},\"author\":{\"name\":\"程序员皮蛋鸽鸽\",\"link\":\"https://github.com/ZhouYu2156\"},\"title\":\"支付宝沙箱支付教程\",\"date\":\"2025-04-19 22:58:03\",\"excerpt\":\"\",\"capture\":\"支付宝沙箱支付详细使用教程\\n详细介绍支付宝沙箱支付的全流程配置最新教程，通俗易懂，图文并茂，手把手教你一步步实现完整沙箱支付功能。亲测可用，文章撰写非常用心，包你学会！\\n&lt;!--@include: @/public/snippets/preface.md--\\n 一、前言\\n由于支付宝官方对Java等语言的文档说明支持较好，在Python方面相对较弱，而且依赖包还安装不了等Bug，所以接下来我将分享《在Python Web开发中如何集成支付宝沙箱支付》的详细教程，如果这篇文章有帮助到你，请记得关注我的公众号，我会定期分享实用的技术教程。如果没有帮到你，也可以留个免费的关注，以后或许会有你感兴趣的教程，而且文章质量都超高哦！\\n在个人平常（或准备后续对接支付宝正式支付环境）的项目中，使用沙箱支付来测试支付功能显得很有必要；如果是在校大学生的话，在你的项目中集成支付宝的沙箱支付，也能让你的项目\"}],\"Flask\":[{\"url\":\"/web开发/后端/Python/支付宝沙箱支付教程\",\"frontmatter\":{\"date\":\"2025-04-19 22:58:03\",\"title\":\"支付宝沙箱支付教程\",\"permalink\":\"/pages/4f6a36\",\"categories\":[\"后端\"],\"tags\":[\"Python\",\"Flask\"],\"coverImg\":\"/screenshots/支付宝沙箱支付详细使用教程/支付宝教程封面.png\",\"top\":true,\"sticky\":2,\"description\":\"详细介绍了在Python Web开发中集成支付宝沙箱支付的完整流程\"},\"author\":{\"name\":\"程序员皮蛋鸽鸽\",\"link\":\"https://github.com/ZhouYu2156\"},\"title\":\"支付宝沙箱支付教程\",\"date\":\"2025-04-19 22:58:03\",\"excerpt\":\"\",\"capture\":\"支付宝沙箱支付详细使用教程\\n详细介绍支付宝沙箱支付的全流程配置最新教程，通俗易懂，图文并茂，手把手教你一步步实现完整沙箱支付功能。亲测可用，文章撰写非常用心，包你学会！\\n&lt;!--@include: @/public/snippets/preface.md--\\n 一、前言\\n由于支付宝官方对Java等语言的文档说明支持较好，在Python方面相对较弱，而且依赖包还安装不了等Bug，所以接下来我将分享《在Python Web开发中如何集成支付宝沙箱支付》的详细教程，如果这篇文章有帮助到你，请记得关注我的公众号，我会定期分享实用的技术教程。如果没有帮到你，也可以留个免费的关注，以后或许会有你感兴趣的教程，而且文章质量都超高哦！\\n在个人平常（或准备后续对接支付宝正式支付环境）的项目中，使用沙箱支付来测试支付功能显得很有必要；如果是在校大学生的话，在你的项目中集成支付宝的沙箱支付，也能让你的项目\"}],\"桌面应用开发\":[{\"url\":\"/web开发/后端/桌面应用开发/\",\"frontmatter\":{\"date\":\"2025-04-19 22:52:13\",\"title\":\"全网最新最全的 electron 项目环境搭建方式与踩坑经验分享\",\"head\":[[\"meta\",{\"name\":\"description\",\"content\":\"全网最全最新 electron 项目环境搭建方式与踩坑经验分享，帮你避坑，少走弯路，节省时间，还等什么，快来参考一下我的 electron 环境搭建指南！\"},{\"name\":\"keywords\",\"content\":\"electron 项目环境搭建 踩坑经验分享\"}]],\"footer\":false,\"permalink\":\"/pages/75a1df\",\"categories\":[\"后端\"],\"tags\":[\"桌面应用开发\"],\"coverImg\":\"/screenshots/Nodejs/Electron安装踩坑经验总结.png\",\"top\":true,\"sticky\":5,\"description\":\"全网最全最新 electron 项目环境搭建方式与踩坑经验分享\"},\"author\":{\"name\":\"程序员皮蛋鸽鸽\",\"link\":\"https://github.com/ZhouYu2156\"},\"title\":\"全网最新最全的 electron 项目环境搭建方式与踩坑经验分享\",\"date\":\"2025-04-19 22:52:13\",\"excerpt\":\"\",\"capture\":\"&lt;!--@include: @/public/snippets/preface.md--\\r\\n\\r\\n&gt; 本文项目搭建演示的`nodejs`版本如下：\\r\\n\\r\\n```bash\\r\\n$ node -v\\r\\n v22.14.0\\r\\n```\\r\\n\\r\\n 一、官方文档手动搭建\\r\\n\\r\\n文档地址：快速入门 | Electron，按照文档步骤操作即可，项目只包含了`electron`依赖，仅仅只是一个`hello world`展示。\\r\\n\\r\\n&gt; ⚠️ 注意：失败！我设置了代理（网络问题）和切换镜像源（淘宝）等操作都没用。截图如下：\\r\\n\\r\\n\\r\\n\\r\\n 二、官方脚手架方式创建\\r\\n\\r\\n- 创建项目命令如下：\\r\\n\\r\\n```bash\\r\\n$ npm init electron-app@latest my-app -- --template=vite  my-app:项目名(自定义)\\r\\n 或\\r\\n$ npm create \"}],\"C++\":[{\"url\":\"/web开发/后端/Cpp/\",\"frontmatter\":{\"date\":\"2025-04-19 15:24:14\",\"title\":\"C++语言快速入门\",\"categories\":[\"后端\"],\"tags\":[\"C++\"],\"description\":\"C++是一种静态类型的中级语言，综合了高级语言和低级语言的特点\",\"coverImg\":\"/banner/8.webp\",\"permalink\":\"/pages/2aeaba\"},\"author\":{\"name\":\"程序员皮蛋鸽鸽\",\"link\":\"https://github.com/ZhouYu2156\"},\"title\":\"C++语言快速入门\",\"date\":\"2025-04-19 15:24:14\",\"excerpt\":\"\",\"capture\":\"C++语言快速入门\\n 安装 `C++` 编译环境\\n```bash\\n $ sudo subscription-manager repos --enable codeready-builder-for-rhel-8-x86_64-rpms\\n$ sudo dnf install -y gcc gcc-c++ make\\n 或者安装完整的开发工具组（包含更多工具如gdb、git等）\\n$ sudo dnf groupinstall -y \\\"Development Tools\\\"\\n 检查安装\\n$ gcc --version\\n$ g++ --version\\n$ make --version\\n```\\n 第一个 `C++` 程序\\n```c++\\n// main.cpp\\ninclude &lt;iostream\\nusing namespace std;\\nint main()\\n{\\n    cout &lt;&lt; \"}],\"Lua\":[{\"url\":\"/web开发/后端/Lua/\",\"frontmatter\":{\"date\":\"2025-04-19 07:24:14\",\"title\":\"Lua语言快速入门\",\"categories\":[\"后端\"],\"tags\":[\"Lua\"],\"description\":\"Lua 是一款轻量级、高效灵活、跨平台的多范式编程语言\",\"coverImg\":\"/banner/1.webp\",\"permalink\":\"/pages/e7b99e\"},\"author\":{\"name\":\"程序员皮蛋鸽鸽\",\"link\":\"https://github.com/ZhouYu2156\"},\"title\":\"Lua语言快速入门\",\"date\":\"2025-04-19 07:24:14\",\"excerpt\":\"\",\"capture\":\"Lua语言快速入门\\n 环境安装\\n- 了解更多，请参考：菜鸟教程-Lua 环境安装\\n- Linux 系统(CentOS)\\n```bash\\n$ sudo yum install -y epel-release\\n$ sudo yum install -y lua\\n```\\n 快速体验\\n 交互式\\n```bash\\n$ man lua                  查看 lua 命令行帮助说明\\n$ lua -v                   查看版本信息\\n$ lua -i                   进入交互模式\\n\\n```\\n 脚本式编程\\n- 创建 `*.lua` 文件\\n```lua\\n!/usr/local/bin/lua\\nprint(\\\"Hello world!\\\")\\n```\\n- 赋予可执行权限\\n```bash\\n$ chmod 700 hello.lua\\n```\\n- 执行脚本\\n```bas\"}],\"Linux\":[{\"url\":\"/web开发/运维/Linux/\",\"frontmatter\":{\"date\":\"2025-04-19 04:15:01\",\"title\":\"Linux基础知识\",\"permalink\":\"/pages/92e12e\",\"categories\":[\"运维\"],\"tags\":[\"Linux\"],\"coverImg\":\"/banner/6.webp\",\"description\":\"介绍Linux的基本使用\"},\"author\":{\"name\":\"程序员皮蛋鸽鸽\",\"link\":\"https://github.com/ZhouYu2156\"},\"title\":\"Linux基础知识\",\"date\":\"2025-04-19 04:15:01\",\"excerpt\":\"\",\"capture\":\"Linux基础知识\"}]}},\"groupCards\":{\"categories\":[{\"name\":\"后端\",\"length\":6},{\"name\":\"web开发\",\"length\":1},{\"name\":\"开发者工具\",\"length\":1},{\"name\":\"VSCode\",\"length\":1},{\"name\":\"运维\",\"length\":1}],\"tags\":[{\"name\":\"Nodejs\",\"length\":2},{\"name\":\"Python\",\"length\":1},{\"name\":\"Flask\",\"length\":1},{\"name\":\"桌面应用开发\",\"length\":1},{\"name\":\"C++\",\"length\":1},{\"name\":\"Lua\",\"length\":1},{\"name\":\"Linux\",\"length\":1}]}}},\"locales\":{},\"scrollOffset\":134,\"cleanUrls\":true}");