import{_ as i,c as a,o as e,ai as n}from"./chunks/framework.nDjVKRVr.js";const c=JSON.parse(`{"title":"Django快速入门教程","description":"Django 哲学宗旨：懂得越多，写得越少","frontmatter":{"date":"2025-04-21T18:17:55.000Z","title":"Django快速入门教程","permalink":"/pages/5e2304","categories":["后端","Python"],"tags":["Django"],"description":"Django 哲学宗旨：懂得越多，写得越少","coverImg":"/screenshots/Python/Django快速入门教程.png","head":[["script",{"charset":"UTF-8","id":"LA_COLLECT","src":"//sdk.51.la/js-sdk-pro.min.js"}],["script",{},"typeof LA !== 'undefined' && LA.init({\\"id\\":\\"你id\\",\\"ck\\":\\"你ck\\",\\"hashMode\\":true})"]]},"headers":[],"relativePath":"web开发/后端/Python/Django快速入门教程.md","filePath":"web开发/后端/Python/Django快速入门教程.md","lastUpdated":1745433318000}`),t={name:"web开发/后端/Python/Django快速入门教程.md"};function l(h,s,p,d,r,o){return e(),a("div",null,s[0]||(s[0]=[n(`<h1 id="django-快速入门" tabindex="-1">Django 快速入门 <a class="header-anchor" href="#django-快速入门" aria-label="Permalink to &quot;Django 快速入门&quot;">​</a></h1><h2 id="安装-django" tabindex="-1">安装 Django <a class="header-anchor" href="#安装-django" aria-label="Permalink to &quot;安装 Django&quot;">​</a></h2><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> django</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="创建项目" tabindex="-1">创建项目 <a class="header-anchor" href="#创建项目" aria-label="Permalink to &quot;创建项目&quot;">​</a></h2><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mkdir</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">项目名</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">称</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                                    # 先创建项目目录</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> django-admin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> startproject</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [&lt;settings&gt;] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">项目名称</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   # settings 是配置目录名称。如果不指定，配置目录的名称与项目名称一致</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cd</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">项目名</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">称</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">目录结构</p><ul><li><code>manage.py</code>：管理 <code>Django</code> 项目的命令行工具。</li><li><code>settings/</code>：项目系统配置目录。</li><li><code>settings/settings.py</code>：<code>Django</code> 项目的配置文件。</li><li><code>settings/urls.py</code>：Django 项目的 URL 声明，就像你网站的 <code>路由</code> 。</li><li><code>settings/asgi.py</code>：项目运行在 <code>ASGI</code> 兼容的 <code>Web</code> 服务器上的入口。</li><li><code>settings/wsgi.py</code>：项目运行在 <code>WSGI</code> 兼容的 <code>Web</code> 服务器上的入口</li></ul></div><h2 id="迁移数据库" tabindex="-1">迁移数据库 <a class="header-anchor" href="#迁移数据库" aria-label="Permalink to &quot;迁移数据库&quot;">​</a></h2><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> python</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> manage.py</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> makemigrations</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   # 生成迁移脚本</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> python</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> manage.py</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> migrate</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">          # 应用迁移数据库脚本</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="启动服务器" tabindex="-1">启动服务器 <a class="header-anchor" href="#启动服务器" aria-label="Permalink to &quot;启动服务器&quot;">​</a></h2><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> python</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> manage.py</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> runserver</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 0.0.0.0:8080</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   # 可以指定局域网公开和端口号</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="创建应用" tabindex="-1">创建应用 <a class="header-anchor" href="#创建应用" aria-label="Permalink to &quot;创建应用&quot;">​</a></h2><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> python</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> manage.py</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> startapp</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">应用名</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">称</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        # 创建一个新的应用</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><blockquote><p>在 <code>Django</code> 中，每一个应用都是一个 <code>Python</code> 包，并且遵循着相同的约定。<code>Django</code> 自带一个工具，可以帮你生成应用的基础目录结构，这样你就能专心写代码，而不是创建目录了。</p></blockquote><ul><li>在生成的 <code>urls.py</code> 中，<code>path()</code> 函数至少需要两个参数：<code>route</code> 和 <code>view</code>。</li><li><code>include()</code> 函数允许引用其他 <code>URLconfs</code> 。每当 <code>Django</code> 遇到 <code>include()</code> 时，它会截断 URL 中匹配到该点的部分，并将剩余的字符串发送到包含的 <code>URLconf</code> 以进行进一步处理。</li></ul><h2 id="创建管理员" tabindex="-1">创建管理员 <a class="header-anchor" href="#创建管理员" aria-label="Permalink to &quot;创建管理员&quot;">​</a></h2><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> python</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> manage.py</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> createsuperuser</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ...</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div>`,16)]))}const g=i(t,[["render",l]]);export{c as __pageData,g as default};
